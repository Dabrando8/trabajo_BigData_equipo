[
  {
    "objectID": "my_trabajo_BigData.html",
    "href": "my_trabajo_BigData.html",
    "title": "Análisis económico y demográfico de España. Retos para los jóvenes españoles",
    "section": "",
    "text": "En este trabajo primero observaremos algunas variables macroeconómicas de España para situar al país en contexto. Después, veremos distintos datos demográficos para realizar algunas proyecciones a futuro sobre trabajo y estudios."
  },
  {
    "objectID": "my_trabajo_BigData.html#introducción",
    "href": "my_trabajo_BigData.html#introducción",
    "title": "Análisis económico y demográfico de España. Retos para los jóvenes españoles",
    "section": "",
    "text": "En este trabajao primero observaremos algunas variables macroeconómicas de España para situar al país en contexto. Después, veremos distintos datos demográficos para realizar algunas proyecciones a futuro sobre trabajo y estudios."
  },
  {
    "objectID": "my_trabajo_BigData.html#datos",
    "href": "my_trabajo_BigData.html#datos",
    "title": "Análisis económico y demográfico de España. Retos para los jóvenes españoles",
    "section": "Datos",
    "text": "Datos\n\n\nAcerca de los datos\nCódigo de los datos\n\n\n\nLa mayoría de datos que hemos utilizado son del INE, y unos poco del FRED. Respecto al formato de los datos, algunos de los que hemos utilizado están en excel, aunque muchos de ellos los hemos descargado en formato px .\n\n\n\nCódigo# A continuación se muestran todos los paquetes utilizados para la realización del trabajo\n\nlibrary(tidyverse)\nlibrary(pxR)\nlibrary(tidyr)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(gganimate)\nlibrary(readxl)\nlibrary(sf) \nlibrary(ggthemes)\nlibrary(plotly)\nlibrary(viridis)\nlibrary(gganimate)\nlibrary(treemap)\nlibrary(treemapify) \nlibrary(RColorBrewer)\nlibrary(stringr)\nlibrary(ggrepel)\nlibrary(purrr)\nlibrary(flexdashboard)\n\n# Ahora cargamos los datos necesarios y los transformamos a dataframes\n\nDemografia_edad_sexo &lt;- read.px(\"datos/Demografia_edad_sexo.px\") %&gt;% as.data.frame()\nDemografia_provincias &lt;- read.px(\"datos/Demografia_provincias.px\") %&gt;% as.data.frame()\nEpa_Paro_comunidades &lt;- read.px(\"datos/Epa_Paro_comunidades.px\") %&gt;% as.data.frame()\nEpa_Paro_provincias &lt;- read.px(\"datos/Epa_Paro_provincias.px\") %&gt;% as.data.frame()\nGraduados_en_2019_de_graduados_en_2014 &lt;- read.px(\"datos/Graduados_en_2019_de_graduados_en_2014.px\") %&gt;% as.data.frame()\nInflacion_mensual &lt;- read_excel(\"datos/Inflacion_mensual.xlsx\") %&gt;% as.data.frame()\nInsercion_en_2019_de_graduasos_en_2014 &lt;- read.px(\"datos/Insercion_en_2019_de_graduados_en_2014.px\") %&gt;% as.data.frame()\nInsercion_laboral &lt;- read.px(\"datos/Insercion_laboral.px\") %&gt;% as.data.frame()\nIPC_por_sectores &lt;- read.px(\"datos/IPC_por_sectores.px\") %&gt;% as.data.frame()\nIPC_vivienda &lt;- read.px(\"datos/IPC_vivienda.px\") %&gt;% as.data.frame()\nProyeccion_demografia &lt;- read.px(\"datos/Proyeccion_demografia.px\") %&gt;% as.data.frame()\nRenta_media &lt;- read.px(\"datos/Renta_media.px\") %&gt;% as.data.frame()\nSin_hogar &lt;- read.px(\"datos/Sin_hogar.px\") %&gt;% as.data.frame()\npib &lt;- read_excel(\"datos/pib.xls\") %&gt;% as.data.frame()\npib_ccaa &lt;- read_excel(\"datos/pib_ccaa.xls\") %&gt;% as.data.frame()\npib_ccaa_top5 &lt;- read_excel(\"datos/pib_ccaa_top5.xls\") %&gt;% as.data.frame()\npoblacion &lt;- read_excel(\"datos/poblacion .xls\") %&gt;% as.data.frame()\npoblacion_ccaa &lt;- read_excel(\"datos/poblacion_ccaa.xls\") %&gt;% as.data.frame()\npoblacion_inmigrante &lt;- read_excel(\"datos/poblacion_inmigrante.xls\") %&gt;% as.data.frame()"
  },
  {
    "objectID": "my_trabajo_BigData.html#variables-económicas",
    "href": "my_trabajo_BigData.html#variables-económicas",
    "title": "Análisis económico y demográfico de España. Retos para los jóvenes españoles",
    "section": "Variables económicas",
    "text": "Variables económicas\nEmpezaremos poniendo a España en su contexto económico."
  },
  {
    "objectID": "my_trabajo_BigData.html#pib",
    "href": "my_trabajo_BigData.html#pib",
    "title": "Análisis económico y demográfico de España. Retos para los jóvenes españoles",
    "section": "PIB",
    "text": "PIB\nLa primera variable económica a tratar será el PIB nominal de la nación. Podemos observar una tendencia creciente desde el 1995 hasta el 2008, momento en el que comienza la financiera a raiz del sobreendeudamiento del sector privado en los años previos. La recuperación económica no se vislumbra hasta principios del 2014, una recuperación basada en mayor grado en el crecimiento poblacional que en el incremento de la productividad. Por último, la crisis del Coronavirus incidió de forma significativa en la riqueza de la nación, dando lugar a una caída de la actividad económica que, sin embargo, se recuperó en pocos años.\n\nCódigoruta_archivo &lt;- \"./datos/pib.xls\"\ndf_PIB &lt;- read_excel(ruta_archivo)\n\nggplot(data = df_PIB, aes(x = Fecha, y = pib)) +\n  geom_line(color = \"blue\", size = 2) +\n  labs(x = \"Año\", y = \"PIB(en millones)\", title = \"Producto Interior Bruto España (1995-2020)\",\n       caption = \"Elaboración propia a partir de datos del INE\") +\n  theme_economist() +\n  annotate(\"rect\",\n           xmin = as.POSIXct(\"2008-01-01\"), \n           xmax = as.POSIXct(\"2014-01-01\"),  \n           ymin = -Inf,\n           ymax = Inf,\n           alpha = 0.2,\n           fill = \"red\") +\n  annotate(geom = \"text\",\n           x = as.POSIXct(\"2011-01-01\"),  \n           y = 1200000,  \n           label = \"Crisis inmobiliaria\",\n           size = 5) +\n  annotate(\"rect\",\n           xmin = as.POSIXct(\"2019-01-01\"), \n           xmax = as.POSIXct(\"2022-01-01\"),  \n           ymin = -Inf,\n           ymax = Inf,\n           alpha = 0.2,\n           fill = \"red\")+\n  annotate(geom = \"text\",\n           x = as.POSIXct(\"2019-01-01\"),  \n           y = 1300000,  \n           label = \"Crisis Coronavirus\",\n           size = 5) +\n  coord_cartesian(xlim = as.POSIXct(c(\"1995-01-01\", \"2023-01-01\")),   \n                  ylim = c(600000, 1400000))  \n\n\n\n\n\n\n\n##PIB top5 CCAA\nLos dos siguientes gráficos vienen a mostrar lo mismo: el PIB de cada una de las comunidades autónomas del país. La creación de dos gráficos obedece a una evidéncia empirica: la gran disparidad poblacional entre las diversas regiones, lo cual impedía el visualizar correctamente los datos de las regiones más pequeñas (en términos poblacionales).\nEn el primer grafico, podemos observar la evolución económica de las 5 regiones más ricas de España: Cataluña, Madrid, Andalucía, Comunitat Valenciana y País Vasco. En conjunto conforman un gráfico un tanto anodino por la similitud en el esdevenir económico del conjunto de regiones españolas. Este hecho se debe, sin ninguna duda, a que todas las CCAA tienen una configuración sectorial muy parecida y, además, son interdependientes entre sí por pertenecer todas a un mismo estado. Los shock que afrontan las distintas regiones son los mismos y sus efectos, también.\n\nCódigoruta_archivo &lt;- \"./datos/pib_ccaa_top5.xls\"\ndf_PIB_CCAA_TOP5 &lt;- read_excel(ruta_archivo)\ndf_PIB_CCAA_TOP5 &lt;- na.omit(df_PIB_CCAA_TOP5)\n\n\ndf_PIB_CCAA_TOP5&lt;- df_PIB_CCAA_TOP5 %&gt;% \n  pivot_longer(cols = 2:7, names_to = \"Fecha\")\n\ndf_PIB_CCAA_TOP5$Comunidad_Autonoma &lt;- as.factor(df_PIB_CCAA_TOP5$Comunidad_Autonoma)\n\ngrafico_3&lt;-ggplot(data = df_PIB_CCAA_TOP5, aes(x = Fecha, y = value, color = Comunidad_Autonoma, group = Comunidad_Autonoma)) +\n  geom_line(size = 1) +\n  labs(x = \"Año\", y = \"PIB(en miles)\", \n       title = \"Producto Interior por CCAA (2016-2021)\",\n       caption = \"Elaboración propia a partir de datos del INE\") +\n  theme_solarized_2()+theme(legend.position = \"none\")+scale_y_continuous(labels = scales::comma)\n\nggplotly(grafico_3)\n\n\n\n\n\n##PIB resto CCAA\nSi observamos el “furgon de cola” autonómico, podremos detectar dos excepciones a la afirmación anunciada anteriormente: las Islas Canarias y les Illes Balears. Ambos archipiélagos tienen en común el tener una gran dependencia del turismo. Es, por lo tanto, entendible que estas regiones hayan experimentado una caida transitoria del PIB mayor.\n\nCódigoruta_archivo &lt;- \"./datos/pib_ccaa.xls\"\ndf_PIB_CCAA &lt;- read_excel(ruta_archivo)\ndf_PIB_CCAA &lt;- na.omit(df_PIB_CCAA)\n\n\ndf_PIB_CCAA&lt;- df_PIB_CCAA %&gt;% \n  pivot_longer(cols = 2:7, names_to = \"Fecha\")\n\ndf_PIB_CCAA$Comunidad_Autonoma &lt;- as.factor(df_PIB_CCAA$Comunidad_Autonoma)\n\ngrafico_2&lt;-ggplot(data = df_PIB_CCAA, aes(x = Fecha, y = value, color = Comunidad_Autonoma, group = Comunidad_Autonoma)) +\n  geom_line(size = 1) +\n  labs(x = NULL, y = \"PIB(en miles)\", \n       title = \"Producto Interior por CCAA (2016-2021)\",\n       caption = \"Elaboración propia a partir de datos del INE\") +\n  theme_solarized_2()+theme(legend.position = \"none\")+scale_y_continuous(labels = scales::comma)\n\nggplotly(grafico_2)\n\n\n\n\n\n\n\nRenta media por comunidades\nComunidades de mayor renta media en 2021\nComunidades de mayor renta media en 2021 (minimalista)\n\n\n\nAhora vamos a ver la renta media por comunidades. Al usar la medida per cápita, el orden de las comunidades mejor posicionadas cambia. El orden varía, y Andaluciía deja de estar presente en el top.\n\nCódigodf_Renta_media &lt;- Renta_media %&gt;%\n  drop_na() %&gt;%\n  rename(Comunidad = Unidades.territoriales, rentamedia = value) %&gt;%\n  arrange(desc(Periodo)) %&gt;%\n  filter(Indicadores.de.renta.media == \"Renta neta media por persona\") %&gt;%\n  filter(Comunidad %in% c(\"Andalucía\", \"Aragón\", \"Asturrias, Principado de\", \"Balears, Illes\", \"Canarias\", \"Cantabria\", \"Castilla y León\", \"Castilla - La Mancha\", \"Cataluña\", \"Comunitat Valenciana\", \"Extremadura\", \"Galicia\", \"Madrid, Comunidad de\", \"Murcia, Región de\", \"Navarra, Comunidad Foral de\", \"País Vasco\", \"Rioja, La\", \"Ceuta\", \"Melilla\"))\n\ndf_Renta_media$Periodo &lt;- factor(df_Renta_media$Periodo, levels = sort(unique(df_Renta_media$Periodo), decreasing = TRUE))\n\ngrafo1 &lt;- df_Renta_media %&gt;%\n  ggplot(aes(x=Periodo, y=rentamedia, group=Comunidad, color=Comunidad)) +\n    geom_line() +\n  labs(x = NULL, y = \"Valor en euros\", \n       title = \"Renta media por CCAA (2016-2021)\") +\n    theme_solarized() \nggplotly(grafo1)\n\n\n\n\n\n\n\nEn forma de gráfico de barras puede ser un poco difícil discernir cuál es la comunidad autónoma con mayor renta media.\n\nCódigodf_top_renta_media &lt;- df_Renta_media %&gt;%\n  filter(Periodo == \"2021\") %&gt;%\n  slice_max(rentamedia, n = 5) \n\ngrafo2 &lt;- df_top_renta_media %&gt;%\nggplot(aes(x=Comunidad, y=rentamedia, group=Comunidad, color=Comunidad)) +\n  labs(x = NULL, y = \"Renta media en euros\", \n       title = \"5 mayores comunidades autónomas por renta media en euros\") +\n  geom_bar(stat = \"identity\") +\n  theme_clean() \nggplotly(grafo2)\n\n\n\n\n\n\n\nEsta representación más simple mediante puntos permite ver claramente que el País Vasco ocupa el primer puesto.\n\nCódigodf_top_renta_media &lt;- df_Renta_media %&gt;%\n  filter(Periodo == \"2021\") %&gt;%\n  slice_max(rentamedia, n = 5) \n\ngrafo2 &lt;- df_top_renta_media %&gt;%\nggplot(aes(x=Periodo, y=rentamedia, group=Comunidad, color=Comunidad)) +\n  labs(x = NULL, y = \"Renta media en euros\", \n       title = \"5 mayores comunidades autónomas por renta media en euros\") +\n  geom_point() +\n  theme_clean() \nggplotly(grafo2)"
  },
  {
    "objectID": "my_trabajo_BigData.html#evolución-del-precio-de-la-vivienda-en-españa",
    "href": "my_trabajo_BigData.html#evolución-del-precio-de-la-vivienda-en-españa",
    "title": "Análisis económico y demográfico de España. Retos para los jóvenes españoles",
    "section": "Evolución del precio de la vivienda en España",
    "text": "Evolución del precio de la vivienda en España\n\nCódigoIPC_vivienda &lt;- read.px(\"datos/IPC_vivienda.px\") %&gt;% as.data.frame()\n\n\n### CORRECTO\n\ndf_vivienda &lt;- IPC_vivienda %&gt;%\n  filter(Comunidades.y.Ciudades.Autónomas == \"Nacional\",\n         Índices.y.tasas %in% c(\"Índice\", \"Variación anual\"),\n         General..vivienda.nueva.y.de.segunda.mano %in% c(\"Vivienda nueva\", \"Vivienda segunda mano\")) %&gt;%\n  mutate(Anio = as.numeric(str_sub(Periodo, 1, 4)), # Extraer el año\n         Trimestre = as.numeric(str_sub(Periodo, 6, 6)), # Extraer el trimestre\n         MesInicio = case_when(\n           Trimestre == 1 ~ 1,\n           Trimestre == 2 ~ 4,\n           Trimestre == 3 ~ 7,\n           Trimestre == 4 ~ 10\n         ),\n         Fecha = as.Date(paste(Anio, MesInicio, \"01\", sep = \"-\"))) %&gt;% \n\narrange(Fecha) \n\n\n\nCódigogr_vivienda &lt;- ggplot(df_vivienda, aes(x = Fecha, y = value, \n                             group = interaction(Índices.y.tasas, General..vivienda.nueva.y.de.segunda.mano), \n                             color = interaction(Índices.y.tasas, General..vivienda.nueva.y.de.segunda.mano))) +\n  geom_line() +\n  theme_minimal() +\n  labs(title = \"Indice de precios de la vivienda en España\",\n       x = \"Fecha\",\n       y = \"Valor del Índice (Base 2015)\",\n       color = \"Guía\") +\n  scale_y_continuous(sec.axis = sec_axis(~ ., name = \"Variación anual en %\")) +\n  scale_color_manual(values = c(\"red\", \"green\", \"blue\", \"brown\"), \n                     labels = c(\"Índice (V. Nueva)\", \"△% (V. Nueva)\", \"Índice (2ª Mano)\", \"△% (2ª Mano)\"))  \n\ngr_vivienda &lt;- gr_vivienda + theme(legend.background = element_rect(fill=\"#EAF2F8\",\n                                                 size=0.5, linetype=\"solid\", \n                                                 colour =\"darkblue\"))\n\n\n\n\nEvolución del precio de la vivienda en España\nProcedimiento\n\n\n\n\n\n¿Que hay detras del mito?\nEn este gráfico animado podemos ver la evolución del precio en las líneas superiores correspondientes a la vivienda nueva y a la vivienda de segunda mano en España. Contrariamente a lo que mucha gente piensa, en 2022 aún no se habían superado los precios registrados durante la burbuja inmobiliaria (hablando en términos nominales). Por lo tanto, tras descontar la inflación, observaríamos que los precios reales son muy inferiores a los de 2007. Si nos fijamos en las líneas de abajo, que reflejan las variaciones porcentuales, podremos contemplar cómo la mayor volatilidad se produce tras la crisis con un fuerte descenso, mientras que después de 2012, el precio empieza a estabilizarse con una subida ininterrumpida desde entonces.\nSi bien hay que considerar que los precios de la vivienda son muy elevados en España en comparación con el salario medio, este gráfico permite desmentir muchos mitos y nos obliga a buscar las causas de la dificultad para acceder a la vivienda en otros factores, ya que el precio de la vivienda solo parece reflejar el efecto de otras causas. Estos motivos podrían ser la dificultad de emancipación de los jóvenes por la falta de oportunidades en el mercado laboral, la escasez de oferta en lugares concretos como grandes ciudades, el endurecimiento en el acceso hipotecario, el estancamiento de los salarios, el aumento de la competencia internacional, la falta de productividad, o la disminución o falta de riqueza real (no todo es el salario; también hay que contemplar el ahorro y el gasto).\n\n\n\nCódigo# Añadir animación\ngr_vivienda_anim &lt;- animacion &lt;- gr_vivienda + transition_reveal(Fecha)\ngr_vivienda_anim\n\n\n\n\n\n\n\n\n\n\n\n\n\nPara poder obtener el gráfico interactivo en este caso, hemos tenido que crear tres columnas nuevas: una con los años, otra con los trimestres y una última con el mes de inicio. Esto facilita la transformación de los datos a formato de fecha.\nPara hacer el gráfico con ggplot, hemos utilizado en las funciones ‘group’ y ‘color’ la función ‘interaction’ para poder obtener una serie de datos agrupada según una combinación de dos datos de diferentes columnas. Después, hemos aplicado el mismo método para el color. Para mostrar un eje vertical secundario en el lado derecho, hemos utilizado ‘scale_y_continuous(sec.axis = sec_axis..)’ y, para cambiar la leyenda de la guía, ‘scale_color_manual(labels)’. Además, hemos modificado el fondo de la leyenda y creado el gráfico animado.\n\n\nCódigo# Añadir animación\ngr_vivienda_anim &lt;- animacion &lt;- gr_vivienda + transition_reveal(Fecha)\ngr_vivienda_anim\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n△% positiva y negativa del P(€) Vivienda por CC.AA.\nProcedimiento\n\n\n\n\nCódigoplot(p_viv_positive) \n\nplot(p_viv_negative)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPara realizar este Treemap, hemos tenido que filtrar los datos que nos convenían para facilitar el manejo de los df’s. En este caso concreto, hemos considerado todas las viviendas, la variación anual y únicamente los T4 (cuartos trimestres). Posteriormente, agrupamos por Comunidades y realizamos la suma de los valores para obtener la variación acumulada durante todos los años. Sin embargo, tuvimos que eliminar los años que acompañaban a T4 para continuar.\nUna vez obtenido, dividimos el df en dos distintos: uno para los valores positivos y otro para los negativos. Para que los cuadros no se vieran muy contrastados entre sí y se apreciaran las pequeñas variaciones, cambiamos la escala a logarítmica, creando una nueva columna con los valores en logaritmo. Aquí tuvimos un ligero problema, ya que para cambiar a logaritmo tuvimos que convertir los valores negativos en positivos.\nSobre los Treemaps, es importante mencionar que cambiamos la proporción del rectángulo. Utilizamos la función ‘paste’ de ‘label’ con =‘barra + n’ para poder mostrar tanto la comunidad como el valor en los bloques. Además, tuvimos que añadir un guion en ‘label’ a los valores que estaban positivos pero que queríamos mostrar como negativos.\nPara poder colocar los dos juntos en la página web, utilizamos ‘#| column: screen-inset-shaded’ y abajo ‘#| layout-nrow: 1’ antes de escribir el código.\n\n\n\nEn estos Treemaps, podemos observar la variación total acumulada desde el cuarto trimestre de 2007 hasta el cuarto trimestre de 2022 en el precio medio de todas las viviendas (tanto nuevas como de segunda mano) vendidas a lo largo de estos últimos años en las diferentes Comunidades Autónomas de nuestro país. Hay varios hechos a considerar para poder analizar los cuadros con una perspectiva adecuada. El primero es que en 2007, el precio de la vivienda había experimentado una fuerte subida respecto a los años anteriores, encontrándose en plena burbuja inmobiliaria. Por lo tanto, no es sorprendente que en muchos territorios el precio haya sufrido grandes reducciones en promedio desde entonces, algo que debería considerar cualquier persona con expectativas de invertir a medio plazo en este sector. Otro hecho que debemos tener en cuenta es que no estamos hablando únicamente de las ciudades; también forman parte de las Comunidades Autónomas muchos territorios rurales. Un caso destacado es el de Cataluña, donde Barcelona probablemente sea uno de los municipios con mayores aumentos en el precio. Sin embargo, este incremento queda más que compensado por las reducciones en otros pueblos menos habitados."
  },
  {
    "objectID": "my_trabajo_BigData.html#sintecho",
    "href": "my_trabajo_BigData.html#sintecho",
    "title": "Análisis económico y demográfico de España. Retos para los jóvenes españoles",
    "section": "Sintecho",
    "text": "Sintecho\nSi nos detenemos a observar las causas del sinhogarismo en España, vemos que la principal causa después de tener que empezar de 0 tras emigrar es la pérdida de empleo.\n\nCódigodf_sin_hogar &lt;- Sin_hogar %&gt;%\n  drop_na() %&gt;%\n  rename(ccaa = Comunidades.y.Ciudades.Autónomas.de.ubicación.del.centro, motivo = Razones.para.abandonar.el.alojamiento) %&gt;%\n  filter(ccaa == \"Total Nacional\") \n\ngrafo3 &lt;- df_sin_hogar %&gt;%\n    arrange(value) %&gt;%\n    ggplot( aes(x=motivo, y=value) ) +\n      geom_bar(stat=\"identity\", fill=\"#69b3a2\") +\n      coord_flip() +\n      theme_solarized_2() +\n      theme(\n        panel.grid.minor.y = element_blank(),\n        panel.grid.major.y = element_blank(),\n        legend.position=\"none\"\n      ) +\n      xlab(\"\") +\n      ylab(\"Porcentaje\") \nggplotly(grafo3)\n\n\n\n\nCódigografo3"
  },
  {
    "objectID": "my_trabajo_BigData.html#desempleo-por-comunidades",
    "href": "my_trabajo_BigData.html#desempleo-por-comunidades",
    "title": "Análisis económico y demográfico de España. Retos para los jóvenes españoles",
    "section": "Desempleo por comunidades",
    "text": "Desempleo por comunidades\nY realcionado con lo anterior, tenemos aquí el desempleo por comunidades\n\nCódigodf_paro_ccaa &lt;- Epa_Paro_comunidades %&gt;%\n  filter(Edad == \"Total\", Sexo == \"Ambos sexos\", Comunidades.y.Ciudades.Autónomas != \"Total Nacional\") \n\ngrafo4 &lt;- ggplot(df_paro_ccaa, aes(x = Comunidades.y.Ciudades.Autónomas, y = value, fill = Comunidades.y.Ciudades.Autónomas)) +\n  geom_bar(stat = \"identity\") +\n  labs(\n    title = \"Desempleo por Comunidades Autónomas\",\n    x = \"CA\",\n    y = \"Desempleo\",\n    fill = \"CA\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.position = \"none\",\n    plot.title = element_text(face = \"bold\", size = 14),\n    axis.title = element_text(face = \"bold\"),\n    axis.text = element_text(size = 10),\n    axis.line = element_line(color = \"black\")\n  ) \nggplotly(grafo4)\n\n\n\n\nCódigografo4"
  },
  {
    "objectID": "my_trabajo_BigData.html#por-edad",
    "href": "my_trabajo_BigData.html#por-edad",
    "title": "Análisis económico y demográfico de España. Retos para los jóvenes españoles",
    "section": "Por edad",
    "text": "Por edad\n\nCódigodf_paro_edad &lt;- Epa_Paro_comunidades %&gt;%\n  select(Edad, Sexo, value) %&gt;%\n  filter(Sexo == \"Ambos sexos\", Edad != \"Total\")\n\ngrafo5 &lt;- ggplot(df_paro_edad, aes(x = Edad, y = value, fill =Edad)) +\n  geom_bar(stat = \"identity\") +\n  labs(\n    title = \"Desempleo por Edad\",\n    x = \"Intervalo de edad\",\n    y = \"Desempleo\",\n    fill = \"Edad\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.position = \"none\",\n    plot.title = element_text(face = \"bold\", size = 14),\n    axis.title = element_text(face = \"bold\"),\n    axis.text = element_text(size = 10),\n    axis.line = element_line(color = \"black\")\n  ) \nggplotly(grafo5)\n\n\n\n\nCódigografo5"
  },
  {
    "objectID": "my_trabajo_BigData.html#por-sexo",
    "href": "my_trabajo_BigData.html#por-sexo",
    "title": "Análisis económico y demográfico de España. Retos para los jóvenes españoles",
    "section": "Por sexo",
    "text": "Por sexo\nAhora vamos a ver el pero por sexos\n\nCódigodf_paro_sexo &lt;- Epa_Paro_comunidades %&gt;%\n  select(Sexo, value) %&gt;%\n  filter(Sexo != \"Ambos sexos\")\n\ngrafo6 &lt;- ggplot(df_paro_sexo, aes(x = Sexo, y = value)) +\n  geom_bar(stat = \"identity\") +\n  labs(\n    title = \"Desempleo por sexo\",\n    x = \"Sexo\",\n    y = \"Desempleo\",\n    fill = \"Sexo\"\n  ) +\n  theme_minimal() \nggplotly(grafo6)\n\n\n\n\nCódigografo6"
  },
  {
    "objectID": "my_trabajo_BigData.html#tasa-de-desempleo-por-región-y-estudio-cursado",
    "href": "my_trabajo_BigData.html#tasa-de-desempleo-por-región-y-estudio-cursado",
    "title": "Análisis económico y demográfico de España. Retos para los jóvenes españoles",
    "section": "Tasa de desempleo por región y estudio cursado",
    "text": "Tasa de desempleo por región y estudio cursado\nEn este caso, hemos obtenido los datos de un estudio sobre el desempleo realizado a estudiantes que finalizaron su carrera en 2014. Se evaluó si tenían un puesto de empleo en el año 2019. Por desgracia, queríamos realizar otros análisis con los datos, pero, como observaréis, faltan datos en muchas ocasiones. Esto se debe a que el estudio no ha sido homogéneo en todas las ocasiones y, a veces, se han agrupado diversas carreras en una sola.\nAunque ya es un poco tarde para cambiar de carrera, os dejo unos datos curiosos para que podáis jugar con las gráficas e ir observando/comparando los estudios (quizás alguien decida hacer otro grado o necesite elegir entre másteres muy diversos):\nLos estudios con más desempleados han sido: Extremadura en la carrera de Turismo con un 36,1%, la rama de estudios con más paro, 33,1%, a nivel nacional en las carreras de humanidades, y en la Comunidad Valenciana, Silvicultura.\nMientras que los estudios con menos desempleados han sido: Enfermería en Cataluña, la que menos paro tiene con un 0,7%, y la rama con menos paro es Salud en Baleares con un 0,8%. A nivel nacional, la carrera de Medicina y, en la Comunidad Valenciana, la carrera de Informática.\nUna curiosidad es que las apariencias engañan, ya que en Canarias, Turismo tiene una de las tasas más altas de desempleo, así que no os fiéis.\nComo norma general, se observa que las carreras de salud e informática son las que menos desempleados tienen, mientras que las de humanidades y artes son las que más suelen tener. Una buena noticia es que Economía es de las que más empleabilidad tiene (aunque os animo a enfocaros hacia la tecnología/digitalización, donde hay aún menos desempleo)."
  },
  {
    "objectID": "my_trabajo_BigData.html#demografía",
    "href": "my_trabajo_BigData.html#demografía",
    "title": "Análisis económico y demográfico de España. Retos para los jóvenes españoles",
    "section": "Demografía",
    "text": "Demografía\nAhora vamos a ver algunos datos demográficos\n#Población inmigrante por origen\nEn el siguiente gráfico podemos observar la evolución de la población inmigrante residente en españa según su región de origen. Por compactarlo lo máximo posible, se han utilizado las regiones supranacionales que brinda el INE para esta cuestión. Podemos observar que el grupo más numeroso en términos demográficos es el de nacidos en otros países de la UE. Este grupo creció hasta, aproximadamente, el comienzo de la recesión a raíz de la crisis del 2008. Hasta el 2012 se matuvo estable y, a continuación, hasta 2019 experimentó un ligero descenso. En 2014 se produjo el “sorpasso” de la población africana a la sudamericana aunque, si observamos la tendencia de crecimiento de cada grupo, parece que no en mucho tardar, los sudamericanos se coronarán como el segundo grupo más numeroso.\nEl segundo y tercer grupo más numeroso, respectivamente, es el de sudamericanos y africanos. Podemos observar en ambos casos un comportamiento procíclico, siendo el de los sudamericanos más notable.\n\nCódigoruta_archivo &lt;- \"./datos/poblacion_inmigrante.xls\"\ndf_poblacion_inmigrante &lt;- read_excel(ruta_archivo)\n\n\nEl cuarto y tercer grupo están conformados, respectivamente, por asiáticos y caribeños. Ambas poblaciones experimentan un crecimiento continuo y estable en los últimos años.\n\nCódigodf_poblacion_inmigrante&lt;- df_poblacion_inmigrante %&gt;% \n  pivot_longer(cols = 2:21, names_to = \"fecha\")\n\ngrafico_4&lt;-ggplot(data = df_poblacion_inmigrante, aes(x = fecha, y = value, color = origen, group = origen)) +\n  geom_line(size = 1) +\n  labs(x = \"Año\", y = NULL, \n       title = \"Población inmigrante por procedencia\",\n       caption = \"Elaboración propia a partir de datos del INE\") +\n  theme_solarized_2()+theme(legend.position = \"none\")\n\nggplotly(grafico_4)\n\n\n\n\n\n#Población por CCAA\nA continuación, tenemos un gráfico de barras\n\nCódigoruta_archivo&lt;-\"./datos/poblacion_ccaa.xls\"\ndf_poblacion_ccaa&lt;-read_excel(ruta_archivo)\n\norden_columnas &lt;- c(1, order(names(df_poblacion_ccaa)[-1]) + 1)\n\ndf_poblacion_ccaa &lt;- df_poblacion_ccaa[, orden_columnas]\n\ndf_poblacion_ccaa&lt;- df_poblacion_ccaa %&gt;% \n  pivot_longer(cols = 2:26, names_to = \"fecha\")\n\ndf_poblacion_ccaa &lt;- df_poblacion_ccaa[order(-df_poblacion_ccaa$value), ]\n\ngrafico_5 &lt;- ggplot(df_poblacion_ccaa, aes(x = reorder(CCAA, -value), y = value)) +\n  geom_bar(stat = \"identity\", fill = \"darkcyan\") +\n  labs(title = \"Población por Comunidad Autónoma\", x = \"Comunidad Autónoma\", y = \"Población\") +\n  theme_solarized() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  theme(legend.position = \"none\")+scale_y_continuous(labels = scales::comma) \n\ngrafico_5"
  },
  {
    "objectID": "my_trabajo_BigData.html#pirámide-poblacional",
    "href": "my_trabajo_BigData.html#pirámide-poblacional",
    "title": "Análisis económico y demográfico de España. Retos para los jóvenes españoles",
    "section": "7.3.Pirámide poblacional",
    "text": "7.3.Pirámide poblacional\n\nCódigourl &lt;- 'https://www.populationpyramid.net/api/pp/724/2023/?csv=true'\ndata &lt;- read.csv(url)\nhead(data)\n#&gt;     Age       M       F\n#&gt; 1   0-4  924878  874166\n#&gt; 2   5-9 1110682 1046828\n#&gt; 3 10-14 1259715 1182213\n#&gt; 4 15-19 1312515 1233843\n#&gt; 5 20-24 1268194 1189567\n#&gt; 6 25-29 1263026 1220525\ndata &lt;- data%&gt;%\n  pivot_longer(names_to = 'Gender', values_to = 'Population', cols = 2:3) %&gt;%\n  mutate(PopPerc=case_when(Gender=='M'~round(Population/sum(Population)*100,2),\n                           TRUE~-round(Population/sum(Population)*100,2)),\n         signal=case_when(Gender=='M'~1,\n                          TRUE~-1))\nhead(data)\n#&gt; # A tibble: 6 × 5\n#&gt;   Age   Gender Population PopPerc signal\n#&gt;   &lt;chr&gt; &lt;chr&gt;       &lt;int&gt;   &lt;dbl&gt;  &lt;dbl&gt;\n#&gt; 1 0-4   M          924878    1.95      1\n#&gt; 2 0-4   F          874166   -1.84     -1\n#&gt; 3 5-9   M         1110682    2.34      1\n#&gt; 4 5-9   F         1046828   -2.2      -1\n#&gt; 5 10-14 M         1259715    2.65      1\n#&gt; 6 10-14 F         1182213   -2.49     -1\nlevels(data$Age)\n#&gt; NULL\ndata$Age &lt;- factor(data$Age,levels=unique(data$Age),ordered=TRUE)\n\ngrafico_6&lt;-ggplot(data)+\n  geom_bar(aes(x=Age,y=PopPerc,fill=Gender),stat='identity')+\n  geom_text(aes(x=Age,y=PopPerc+signal*.3,label=abs(PopPerc)))+\n  coord_flip()+\n  scale_fill_manual(name='',values=c('darkred','steelblue'))+\n  scale_y_continuous(breaks=seq(-10,10,1),\n                     labels=function(x){paste(abs(x),'%')})+\n  labs(x='',y='Población (%)',\n       title='Pirámide poblacional de España',\n       subtitle=paste('Población residente en 2023', format(sum(data$Population),big.mark='.')),\n       caption='Fuente: Elaboración propia a partir de datos de PopulationPyramid.net')+\n  cowplot::theme_cowplot()+\n  theme(axis.text.x=element_text(vjust=.5),\n        panel.grid.major.y = element_line(color='lightgray',linetype='dashed'),\n        legend.position = 'top',\n        legend.justification = 'center')\n\nggplotly(grafico_6)"
  },
  {
    "objectID": "my_trabajo_BigData.html#tasa-de-desempleo-por-región-y-estudio-cursado-1",
    "href": "my_trabajo_BigData.html#tasa-de-desempleo-por-región-y-estudio-cursado-1",
    "title": "Análisis económico y demográfico de España. Retos para los jóvenes españoles",
    "section": "Tasa de desempleo por región y estudio cursado",
    "text": "Tasa de desempleo por región y estudio cursado\nEn este caso, hemos obtenido los datos de un estudio sobre el desempleo realizado a estudiantes que finalizaron su carrera en 2014. Se evaluó si tenían un puesto de empleo en el año 2019. Por desgracia, queríamos realizar otros análisis con los datos, pero, como observaréis, faltan datos en muchas ocasiones. Esto se debe a que el estudio no ha sido homogéneo en todas las ocasiones y, a veces, se han agrupado diversas carreras en una sola.\nAunque ya es un poco tarde para cambiar de carrera, os dejo unos datos curiosos para que podáis jugar con las gráficas e ir observando/comparando los estudios (quizás alguien decida hacer otro grado o necesite elegir entre másteres muy diversos):\nLos estudios con más desempleados han sido: Extremadura en la carrera de Turismo con un 36,1%, la rama de estudios con más paro, 33,1%, a nivel nacional en las carreras de humanidades, y en la Comunidad Valenciana, Silvicultura.\nMientras que los estudios con menos desempleados han sido: Enfermería en Cataluña, la que menos paro tiene con un 0,7%, y la rama con menos paro es Salud en Baleares con un 0,8%. A nivel nacional, la carrera de Medicina y, en la Comunidad Valenciana, la carrera de Informática.\nUna curiosidad es que las apariencias engañan, ya que en Canarias, Turismo tiene una de las tasas más altas de desempleo, así que no os fiéis.\nComo norma general, se observa que las carreras de salud e informática son las que menos desempleados tienen, mientras que las de humanidades y artes son las que más suelen tener. Una buena noticia es que Economía es de las que más empleabilidad tiene (aunque os animo a enfocaros hacia la tecnología/digitalización, donde hay aún menos desempleo).\n\nCódigo\nInsercion_merc_laboral &lt;- read.px(\"datos/Insercion_en_2019_de_graduados_en_2014.px\") %&gt;% as.data.frame()\n\nnombres_reemplazo &lt;- c(\n  \"Formación de docentes de enseñanza infantil\" = \"Enseñanza infantil\",\n  \"Ciencias sociales y del comportamiento (Otros estudios)\" = \"C_Sociales\",\n  \"Formación de docentes de enseñanza primaria\" = \"Enseñanza primaria\",\n  \"Técnicas audiovisuales y medios de comunicación\" = \"Teleco\",\n  \"Educación (Otros estudios)\" = \"Otra educacion\",\n  \"Artes (Otros estudios)\" = \"Otras artes\",\n  \"Actividades físicas y deportivas\" = \"Deporte\",\n  \"Agricultura y ganadería\" = \"Agricultura\",\n  \"Arquitectura y construcción\" = \"Arquitectura\",\n  \"Ciencias químicas, físicas y geológicas\" = \"Ciencias fisicas\",\n  \"Dirección y administración\" = \"Administracion\",\n  \"Industria manufacturera y producción\" = \"Industria\",\n  \"Ingeniería y profesiones afines\" = \"Ingenieria\",\n  \"Matemáticas y estadística\" = \"Mates\",\n  \"Negocios y administración (Otros estudios)\" = \"Negocios\",\n  \"Periodismo y documentación\" = \"Periodismo\",\n  \"Salud (Otros estudios)\" = \"Salud\",\n  \"Servicios (Otros estudios)\" = \"Servicios\",\n  \"Viajes, turismo y ocio\" = \"Turismo\",\n  \"02 - ARTES Y HUMANIDADES\" = \"02 - ARTES\",\n  \"03 - CIENCIAS SOCIALES, PERIODISMO Y DOCUMENTACIÓN\" = \"03 - C_SOCIALES\",\n  \"04 - NEGOCIOS, ADMINISTRACIÓN Y DERECHO\" = \"04 - NEGOCIOS\",\n  \"07 - INGENIERÍA, INDUSTRIA Y CONSTRUCCIÓN\" = \"07 - INGENIERIA\",\n  \"08 - AGRICULTURA, GANADERÍA, SILVICULTURA, PESCA Y VETERINARIA\" = \"08 - AGRICULTURA\",\n  \"TOTAL\" = \"Promedio\",\n  \"09 - SALUD Y SERVICIOS SOCIALES\" = \"09 - SALUD\")\n\nreplace_patterns &lt;- function(text, patterns) {\n  for (original in names(patterns)) {\n    text &lt;- gsub(original, patterns[original], text, fixed = TRUE)\n  }\n  return(text)\n}\n\ndf_insercion_corregido &lt;- Insercion_merc_laboral %&gt;%\n  mutate(Ámbito.de.estudio = map_chr(Ámbito.de.estudio, replace_patterns, nombres_reemplazo))\n\n\n# Suponiendo que tu data frame se llama df\n# y la primera columna se llama \"Columna1\"\n\n# Filtrar las filas que contienen \"Tasa de paro\" en la primera columna\ndf_paro &lt;- df_insercion_corregido[df_insercion_corregido$Tasas.de.actividad..empleo.y.paro == \"Tasa de paro\" & df_insercion_corregido$value != 0, ] \n\n\n# Calcular el valor máximo de 'value' para cada 'Cat_principal' único\ndf_paro_max &lt;- df_paro %&gt;%\n  mutate(Cat_principal = ifelse(Ámbito.de.estudio == \"Promedio\", \"11 - MEDIA\", \n                                ifelse(grepl(\"^[0-9]+ -\", Ámbito.de.estudio), Ámbito.de.estudio, NA))) %&gt;%\n  mutate(Ámbito.de.estudio = ifelse(grepl(\"^[0-9]+ -\", Ámbito.de.estudio), \n                                    paste0(sub(\" -.*\", \"\", Ámbito.de.estudio), \"_media\"), \n                                    Ámbito.de.estudio)) %&gt;%\n  fill(Cat_principal, .direction = \"down\") %&gt;%\n  # Extraer la parte numérica de Cat_principal y convertirla a numérico\n  mutate(Cat_principal_num = as.numeric(str_extract(Cat_principal, \"^[0-9]+\"))) %&gt;%\n  # Ordenar por la columna numérica\n  arrange(Cat_principal_num)\ndf_paro_max &lt;- na.omit(df_paro_max)\n\n# Inicializar un DataFrame vacío para almacenar los resultados\nvalores_maximos &lt;- data.frame(Cat_principal = character(), \n                              CCAA.de.su.universidad = character(), \n                              max_value = numeric(), \n                              stringsAsFactors = FALSE)\n\n# Asegurarse de que los nombres de las columnas son correctos\nlista_df &lt;- split(df_paro_max, list(df_paro_max$Cat_principal, df_paro_max$CCAA.de.su.universidad))\n\n# Calcular el valor máximo para cada combinación de 'Cat_principal' y 'CCAA.de.su.universidad'\nfor (i in seq_along(lista_df)) {\n  if (nrow(lista_df[[i]]) &gt; 0) {  # Solo si hay filas en el dataframe\n    max_value &lt;- max(lista_df[[i]]$value, na.rm = TRUE)\n    if (!is.infinite(max_value)) {  # Solo si hay un valor máximo finito\n      cat_principal &lt;- lista_df[[i]]$Cat_principal[1]  # Tomar el primer valor\n      ccaa_estudio &lt;- lista_df[[i]]$CCAA.de.su.universidad[1]  # Tomar el primer valor\n      valores_maximos &lt;- rbind(valores_maximos, data.frame(Cat_principal = cat_principal,\n                                                           CCAA.de.su.universidad = ccaa_estudio,\n                                                           max_value = max_value))\n    }\n  }\n}\n\n# Asumiendo que df_nacion y valores_maximos ya están definidos y preparados correctamente\n# Unir valores_maximos con df_nacion para agregar la columna max_value\ndf_max_value &lt;- df_paro_max %&gt;%\n  left_join(valores_maximos, by = c(\"Cat_principal\", \"CCAA.de.su.universidad\")) %&gt;%\n  mutate(max_value = ifelse(value == max_value, max_value, NA))\n\ndf_max_value &lt;- df_max_value %&gt;%\n  mutate(Ámbito.de.estudio = ifelse(Ámbito.de.estudio == \"06_media\", \"Informatica\", Ámbito.de.estudio)) \n\n# Crear df_media filtrando tanto \"media\" como \"Informatica como Promedio\"\ndf_medias &lt;- df_max_value %&gt;%\n  filter(str_detect(Ámbito.de.estudio, \"media|Informatica|Promedio\")) %&gt;%\n  select(-max_value)\n\ndf_sin_medias &lt;- df_max_value %&gt;%\n  filter(!(Ámbito.de.estudio %in% df_medias$Ámbito.de.estudio) | Ámbito.de.estudio == \"Informatica\" | Ámbito.de.estudio == \"Promedio\")\n\ndf_sin_medias &lt;- df_sin_medias %&gt;%\n  arrange(Cat_principal, CCAA.de.su.universidad, desc(value)) %&gt;%\n  group_by(Cat_principal, CCAA.de.su.universidad) %&gt;%\n  mutate(next_value = lead(value, default = 0),\n         next_cat = lead(Cat_principal),\n         next_ccaa = lead(CCAA.de.su.universidad),\n         next_lower_value = ifelse(Cat_principal == next_cat & CCAA.de.su.universidad == next_ccaa, next_value, NA)) %&gt;%\n  mutate(next_lower_value = ifelse(is.na(next_lower_value), 0, next_lower_value)) %&gt;%\n  mutate(segment_start = next_lower_value,\n         segment_end = value) %&gt;%\n  ungroup() %&gt;%\n  select(-next_value, -next_cat, -next_ccaa) # Eliminar las columnas temporales\n\n\n\n\nEspaña\nAndalucía\nAragon\nAsturias\nBaleares\nCanarias\nCantabria\nC.León\nLa Mancha\nCataluña\nC.Valenciana\nExtremadura\nGalicia\nMadrid\nMurcia\nNavarra\nP.Vasco\nRioja\nProcedimiento\n\n\n\n\nCódigodf_sin_medias_nacion &lt;- df_sin_medias %&gt;% filter(CCAA.de.su.universidad == \"Total nacional\")\ndf_medias_nacion &lt;- df_medias %&gt;% filter(CCAA.de.su.universidad == \"Total nacional\")\n\n# Convertir Cat_principal a un factor ordenado\ndf_sin_medias_nacion$Cat_principal &lt;- fct_inorder(df_sin_medias_nacion$Cat_principal)\ndf_medias_nacion$Cat_principal &lt;- fct_inorder(df_medias_nacion$Cat_principal)\n\np_paro_nacion &lt;- ggplot() +\n  geom_rect(data = df_sin_medias_nacion, aes(xmin = as.numeric(Cat_principal) - 0.4, \n                                             xmax = as.numeric(Cat_principal) + 0.4, \n                                             ymin = segment_start, \n                                             ymax = segment_end, fill = segment_end, \n                                             alpha = Cat_principal), stat = \"identity\") +  # Mapea alpha a Cat_principal\n  scale_alpha_discrete(range = c(1, 1), name = \"Categoría de estudios\") +  # Esto hace que alpha sea constante, pero aún crea la leyenda\n  geom_point(data = df_medias_nacion, aes(x = as.numeric(Cat_principal), y = value), color = \"black\", size = 3) +\n  geom_text(data = df_sin_medias_nacion, aes(x = as.numeric(Cat_principal), y = value, label = Ámbito.de.estudio), \n            size = 3) +\n  scale_fill_gradientn(colours = brewer.pal(8, \"Set2\"), name = \"Escala de colores\") +\n  labs(title = \"Tasa de paro según el estudio cursado\",\n       x = \"Categoría y subcategoría de estudios\",\n       y = \"Tasa de paro (%)\") +\n  scale_x_continuous(breaks = as.numeric(unique(df_sin_medias_nacion$Cat_principal)), labels = function(x) substr(x, 1, 2)) +\n  theme_minimal() +\n  theme(legend.position=\"right\")  # Coloca la leyenda en la derecha\np_paro_nacion\n\n\n\n\n\n\n\n\n\n\nCódigodf_sin_medias_Andalucia &lt;- df_sin_medias %&gt;% filter(CCAA.de.su.universidad == \"Andalucía\")\ndf_medias_Andalucia &lt;- df_medias %&gt;% filter(CCAA.de.su.universidad == \"Andalucía\")\n\ndf_sin_medias_Andalucia$Cat_principal &lt;- fct_inorder(df_sin_medias_Andalucia$Cat_principal)\ndf_medias_Andalucia$Cat_principal &lt;- fct_inorder(df_medias_Andalucia$Cat_principal)\n\np_paro_Andalucia &lt;- ggplot() +\n  geom_rect(data = df_sin_medias_Andalucia, aes(xmin = as.numeric(Cat_principal) - 0.4, \n                                                xmax = as.numeric(Cat_principal) + 0.4, \n                                                ymin = segment_start, \n                                                ymax = segment_end, fill = segment_end, \n                                                alpha = Cat_principal), stat = \"identity\") +  # Mapea alpha a Cat_principal\n  scale_alpha_discrete(range = c(1, 1), name = \"Categoría de estudios\") +  # Esto hace que alpha sea constante, pero aún crea la leyenda\n  geom_point(data = df_medias_Andalucia, aes(x = as.numeric(Cat_principal), y = value), color = \"black\", size = 3) +\n  geom_text(data = df_sin_medias_Andalucia, aes(x = as.numeric(Cat_principal), y = value, label = Ámbito.de.estudio), \n            size = 3) +\n  scale_fill_gradientn(colours = brewer.pal(8, \"Set2\"), name = \"Escala de colores\") +\n  labs(title = \"Tasa de paro según el estudio cursado\",\n       x = \"Categoría y subcategoría de estudios\",\n       y = \"Tasa de paro (%)\") +\n  scale_x_continuous(breaks = as.numeric(unique(df_sin_medias_Andalucia$Cat_principal)), labels = function(x) substr(x, 1, 2)) +\n  theme_minimal() +\n  theme(legend.position=\"right\")  # Coloca la leyenda en la derecha\np_paro_Andalucia\n\n\n\n\n\n\n\n\n\n\nCódigodf_sin_medias_Aragon &lt;- df_sin_medias %&gt;% filter(CCAA.de.su.universidad == \"Aragón\")\ndf_medias_Aragon &lt;- df_medias %&gt;% filter(CCAA.de.su.universidad == \"Aragón\")\n\ndf_sin_medias_Aragon$Cat_principal &lt;- fct_inorder(df_sin_medias_Aragon$Cat_principal)\ndf_medias_Aragon$Cat_principal &lt;- fct_inorder(df_medias_Aragon$Cat_principal)\n\np_paro_Aragon &lt;- ggplot() +\n  geom_rect(data = df_sin_medias_Aragon, aes(xmin = as.numeric(Cat_principal) - 0.4, \n                                             xmax = as.numeric(Cat_principal) + 0.4, \n                                             ymin = segment_start, \n                                             ymax = segment_end, fill = segment_end, \n                                             alpha = Cat_principal), stat = \"identity\") +  # Mapea alpha a Cat_principal\n  scale_alpha_discrete(range = c(1, 1), name = \"Categoría de estudios\") +  # Esto hace que alpha sea constante, pero aún crea la leyenda\n  geom_point(data = df_medias_Aragon, aes(x = as.numeric(Cat_principal), y = value), color = \"black\", size = 3) +\n  geom_text(data = df_sin_medias_Aragon, aes(x = as.numeric(Cat_principal), y = value, label = Ámbito.de.estudio), \n            size = 3) +\n  scale_fill_gradientn(colours = brewer.pal(8, \"Set2\"), name = \"Escala de colores\") +\n  labs(title = \"Tasa de paro según el estudio cursado\",\n       x = \"Categoría y subcategoría de estudios\",\n       y = \"Tasa de paro (%)\") +\n  scale_x_continuous(breaks = as.numeric(unique(df_sin_medias_Aragon$Cat_principal)), labels = function(x) substr(x, 1, 2)) +\n  theme_minimal() +\n  theme(legend.position=\"right\")  # Coloca la leyenda en la derecha\np_paro_Aragon\n\n\n\n\n\n\n\n\n\n\nCódigodf_sin_medias_Asturias &lt;- df_sin_medias %&gt;% filter(CCAA.de.su.universidad == \"Asturias, Principado de\")\ndf_medias_Asturias &lt;- df_medias %&gt;% filter(CCAA.de.su.universidad == \"Asturias, Principado de\")\n\ndf_sin_medias_Asturias$Cat_principal &lt;- fct_inorder(df_sin_medias_Asturias$Cat_principal)\ndf_medias_Asturias$Cat_principal &lt;- fct_inorder(df_medias_Asturias$Cat_principal)\n\np_paro_Asturias &lt;- ggplot() +\n  geom_rect(data = df_sin_medias_Asturias, aes(xmin = as.numeric(Cat_principal) - 0.4, \n                                               xmax = as.numeric(Cat_principal) + 0.4, \n                                               ymin = segment_start, \n                                               ymax = segment_end, fill = segment_end, \n                                               alpha = Cat_principal), stat = \"identity\") +  # Mapea alpha a Cat_principal\n  scale_alpha_discrete(range = c(1, 1), name = \"Categoría de estudios\") +  # Esto hace que alpha sea constante, pero aún crea la leyenda\n  geom_point(data = df_medias_Asturias, aes(x = as.numeric(Cat_principal), y = value), color = \"black\", size = 3) +\n  geom_text(data = df_sin_medias_Asturias, aes(x = as.numeric(Cat_principal), y = value, label = Ámbito.de.estudio), \n            size = 3) +\n  scale_fill_gradientn(colours = brewer.pal(8, \"Set2\"), name = \"Escala de colores\") +\n  labs(title = \"Tasa de paro según el estudio cursado\",\n       x = \"Categoría y subcategoría de estudios\",\n       y = \"Tasa de paro (%)\") +\n  scale_x_continuous(breaks = as.numeric(unique(df_sin_medias_Asturias$Cat_principal)), labels = function(x) substr(x, 1, 2)) +\n  theme_minimal() +\n  theme(legend.position=\"right\")  # Coloca la leyenda en la derecha\np_paro_Asturias\n\n\n\n\n\n\n\n\n\n\nCódigodf_sin_medias_Baleares &lt;- df_sin_medias %&gt;% filter(CCAA.de.su.universidad == \"Balears, Illes\")\ndf_medias_Baleares &lt;- df_medias %&gt;% filter(CCAA.de.su.universidad == \"Balears, Illes\")\n\ndf_sin_medias_Baleares$Cat_principal &lt;- fct_inorder(df_sin_medias_Baleares$Cat_principal)\ndf_medias_Baleares$Cat_principal &lt;- fct_inorder(df_medias_Baleares$Cat_principal)\n\np_paro_Baleares &lt;- ggplot() +\n  geom_rect(data = df_sin_medias_Baleares, aes(xmin = as.numeric(Cat_principal) - 0.4, \n                                               xmax = as.numeric(Cat_principal) + 0.4, \n                                               ymin = segment_start, \n                                               ymax = segment_end, fill = segment_end, \n                                               alpha = Cat_principal), stat = \"identity\") +  # Mapea alpha a Cat_principal\n  scale_alpha_discrete(range = c(1, 1), name = \"Categoría de estudios\") +  # Esto hace que alpha sea constante, pero aún crea la leyenda\n  geom_point(data = df_medias_Baleares, aes(x = as.numeric(Cat_principal), y = value), color = \"black\", size = 3) +\n  geom_text(data = df_sin_medias_Baleares, aes(x = as.numeric(Cat_principal), y = value, label = Ámbito.de.estudio), \n            size = 3) +\n  scale_fill_gradientn(colours = brewer.pal(8, \"Set2\"), name = \"Escala de colores\") +\n  labs(title = \"Tasa de paro según el estudio cursado\",\n       x = \"Categoría y subcategoría de estudios\",\n       y = \"Tasa de paro (%)\") +\n  scale_x_continuous(breaks = as.numeric(unique(df_sin_medias_Baleares$Cat_principal)), labels = function(x) substr(x, 1, 2)) +\n  theme_minimal() +\n  theme(legend.position=\"right\")  # Coloca la leyenda en la derecha\np_paro_Baleares\n\n\n\n\n\n\n\n\n\n\nCódigodf_sin_medias_Canarias &lt;- df_sin_medias %&gt;% filter(CCAA.de.su.universidad == \"Canarias\")\ndf_medias_Canarias &lt;- df_medias %&gt;% filter(CCAA.de.su.universidad == \"Canarias\")\n\ndf_sin_medias_Canarias$Cat_principal &lt;- fct_inorder(df_sin_medias_Canarias$Cat_principal)\ndf_medias_Canarias$Cat_principal &lt;- fct_inorder(df_medias_Canarias$Cat_principal)\n\np_paro_Canarias &lt;- ggplot() +\n  geom_rect(data = df_sin_medias_Canarias, aes(xmin = as.numeric(Cat_principal) - 0.4, \n                                               xmax = as.numeric(Cat_principal) + 0.4, \n                                               ymin = segment_start, \n                                               ymax = segment_end, fill = segment_end, \n                                               alpha = Cat_principal), stat = \"identity\") +  # Mapea alpha a Cat_principal\n  scale_alpha_discrete(range = c(1, 1), name = \"Categoría de estudios\") +  # Esto hace que alpha sea constante, pero aún crea la leyenda\n  geom_point(data = df_medias_Canarias, aes(x = as.numeric(Cat_principal), y = value), color = \"black\", size = 3) +\n  geom_text(data = df_sin_medias_Canarias, aes(x = as.numeric(Cat_principal), y = value, label = Ámbito.de.estudio), \n            size = 3) +\n  scale_fill_gradientn(colours = brewer.pal(8, \"Set2\"), name = \"Escala de colores\") +\n  labs(title = \"Tasa de paro según el estudio cursado\",\n       x = \"Categoría y subcategoría de estudios\",\n       y = \"Tasa de paro (%)\") +\n  scale_x_continuous(breaks = as.numeric(unique(df_sin_medias_Canarias$Cat_principal)), labels = function(x) substr(x, 1, 2)) +\n  theme_minimal() +\n  theme(legend.position=\"right\")  # Coloca la leyenda en la derecha\np_paro_Canarias\n\n\n\n\n\n\n\n\n\n\nCódigodf_sin_medias_Cantabria &lt;- df_sin_medias %&gt;% filter(CCAA.de.su.universidad == \"Cantabria\")\ndf_medias_Cantabria &lt;- df_medias %&gt;% filter(CCAA.de.su.universidad == \"Cantabria\")\n\ndf_sin_medias_Cantabria$Cat_principal &lt;- fct_inorder(df_sin_medias_Cantabria$Cat_principal)\ndf_medias_Cantabria$Cat_principal &lt;- fct_inorder(df_medias_Cantabria$Cat_principal)\n\np_paro_Cantabria &lt;- ggplot() +\n  geom_rect(data = df_sin_medias_Cantabria, aes(xmin = as.numeric(Cat_principal) - 0.4, \n                                                xmax = as.numeric(Cat_principal) + 0.4, \n                                                ymin = segment_start, \n                                                ymax = segment_end, fill = segment_end, \n                                                alpha = Cat_principal), stat = \"identity\") +  # Mapea alpha a Cat_principal\n  scale_alpha_discrete(range = c(1, 1), name = \"Categoría de estudios\") +  # Esto hace que alpha sea constante, pero aún crea la leyenda\n  geom_point(data = df_medias_Cantabria, aes(x = as.numeric(Cat_principal), y = value), color = \"black\", size = 3) +\n  geom_text(data = df_sin_medias_Cantabria, aes(x = as.numeric(Cat_principal), y = value, label = Ámbito.de.estudio), \n            size = 3) +\n  scale_fill_gradientn(colours = brewer.pal(8, \"Set2\"), name = \"Escala de colores\") +\n  labs(title = \"Tasa de paro según el estudio cursado\",\n       x = \"Categoría y subcategoría de estudios\",\n       y = \"Tasa de paro (%)\") +\n  scale_x_continuous(breaks = as.numeric(unique(df_sin_medias_Cantabria$Cat_principal)), labels = function(x) substr(x, 1, 2)) +\n  theme_minimal() +\n  theme(legend.position=\"right\")  # Coloca la leyenda en la derecha\np_paro_Cantabria\n\n\n\n\n\n\n\n\n\n\nCódigodf_sin_medias_C_y_Leon &lt;- df_sin_medias %&gt;% filter(CCAA.de.su.universidad == \"Castilla y León\")\ndf_medias_C_y_Leon &lt;- df_medias %&gt;% filter(CCAA.de.su.universidad == \"Castilla y León\")\n\ndf_sin_medias_C_y_Leon$Cat_principal &lt;- fct_inorder(df_sin_medias_C_y_Leon$Cat_principal)\ndf_medias_C_y_Leon$Cat_principal &lt;- fct_inorder(df_medias_C_y_Leon$Cat_principal)\n\np_paro_C_y_Leon &lt;- ggplot() +\n  geom_rect(data = df_sin_medias_C_y_Leon, aes(xmin = as.numeric(Cat_principal) - 0.4, \n                                               xmax = as.numeric(Cat_principal) + 0.4, \n                                               ymin = segment_start, \n                                               ymax = segment_end, fill = segment_end, \n                                               alpha = Cat_principal), stat = \"identity\") +  # Mapea alpha a Cat_principal\n  scale_alpha_discrete(range = c(1, 1), name = \"Categoría de estudios\") +  # Esto hace que alpha sea constante, pero aún crea la leyenda\n  geom_point(data = df_medias_C_y_Leon, aes(x = as.numeric(Cat_principal), y = value), color = \"black\", size = 3) +\n  geom_text(data = df_sin_medias_C_y_Leon, aes(x = as.numeric(Cat_principal), y = value, label = Ámbito.de.estudio), \n            size = 3) +\n  scale_fill_gradientn(colours = brewer.pal(8, \"Set2\"), name = \"Escala de colores\") +\n  labs(title = \"Tasa de paro según el estudio cursado\",\n       x = \"Categoría y subcategoría de estudios\",\n       y = \"Tasa de paro (%)\") +\n  scale_x_continuous(breaks = as.numeric(unique(df_sin_medias_C_y_Leon$Cat_principal)), labels = function(x) substr(x, 1, 2)) +\n  theme_minimal() +\n  theme(legend.position=\"right\")  # Coloca la leyenda en la derecha\np_paro_C_y_Leon\n\n\n\n\n\n\n\n\n\n\nCódigodf_sin_medias_C_La_Mancha &lt;- df_sin_medias %&gt;% filter(CCAA.de.su.universidad == \"Castilla - La Mancha\")\ndf_medias_C_La_Mancha &lt;- df_medias %&gt;% filter(CCAA.de.su.universidad == \"Castilla - La Mancha\")\n\ndf_sin_medias_C_La_Mancha$Cat_principal &lt;- fct_inorder(df_sin_medias_C_La_Mancha$Cat_principal)\ndf_medias_C_La_Mancha$Cat_principal &lt;- fct_inorder(df_medias_C_La_Mancha$Cat_principal)\n\np_paro_C_La_Mancha &lt;- ggplot() +\n  geom_rect(data = df_sin_medias_C_La_Mancha, aes(xmin = as.numeric(Cat_principal) - 0.4, \n                                                  xmax = as.numeric(Cat_principal) + 0.4, \n                                                  ymin = segment_start, \n                                                  ymax = segment_end, fill = segment_end, \n                                                  alpha = Cat_principal), stat = \"identity\") +  # Mapea alpha a Cat_principal\n  scale_alpha_discrete(range = c(1, 1), name = \"Categoría de estudios\") +  # Esto hace que alpha sea constante, pero aún crea la leyenda\n  geom_point(data = df_medias_C_La_Mancha, aes(x = as.numeric(Cat_principal), y = value), color = \"black\", size = 3) +\n  geom_text(data = df_sin_medias_C_La_Mancha, aes(x = as.numeric(Cat_principal), y = value, label = Ámbito.de.estudio), \n            size = 3) +\n  scale_fill_gradientn(colours = brewer.pal(8, \"Set2\"), name = \"Escala de colores\") +\n  labs(title = \"Tasa de paro según el estudio cursado\",\n       x = \"Categoría y subcategoría de estudios\",\n       y = \"Tasa de paro (%)\") +\n  scale_x_continuous(breaks = as.numeric(unique(df_sin_medias_C_La_Mancha$Cat_principal)), labels = function(x) substr(x, 1, 2)) +\n  theme_minimal() +\n  theme(legend.position=\"right\")  # Coloca la leyenda en la derecha\np_paro_C_La_Mancha\n\n\n\n\n\n\n\n\n\n\nCódigodf_sin_medias_Catalunya &lt;- df_sin_medias %&gt;% filter(CCAA.de.su.universidad == \"Cataluña\")\ndf_medias_Catalunya &lt;- df_medias %&gt;% filter(CCAA.de.su.universidad == \"Cataluña\")\n\ndf_sin_medias_Catalunya$Cat_principal &lt;- fct_inorder(df_sin_medias_Catalunya$Cat_principal)\ndf_medias_Catalunya$Cat_principal &lt;- fct_inorder(df_medias_Catalunya$Cat_principal)\n\np_paro_Catalunya &lt;- ggplot() +\n  geom_rect(data = df_sin_medias_Catalunya, aes(xmin = as.numeric(Cat_principal) - 0.4, \n                                                xmax = as.numeric(Cat_principal) + 0.4, \n                                                ymin = segment_start, \n                                                ymax = segment_end, fill = segment_end, \n                                                alpha = Cat_principal), stat = \"identity\") +  # Mapea alpha a Cat_principal\n  scale_alpha_discrete(range = c(1, 1), name = \"Categoría de estudios\") +  # Esto hace que alpha sea constante, pero aún crea la leyenda\n  geom_point(data = df_medias_Catalunya, aes(x = as.numeric(Cat_principal), y = value), color = \"black\", size = 3) +\n  geom_text(data = df_sin_medias_Catalunya, aes(x = as.numeric(Cat_principal), y = value, label = Ámbito.de.estudio), \n            size = 3) +\n  scale_fill_gradientn(colours = brewer.pal(8, \"Set2\"), name = \"Escala de colores\") +\n  labs(title = \"Tasa de paro según el estudio cursado\",\n       x = \"Categoría y subcategoría de estudios\",\n       y = \"Tasa de paro (%)\") +\n  scale_x_continuous(breaks = as.numeric(unique(df_sin_medias_Catalunya$Cat_principal)), labels = function(x) substr(x, 1, 2)) +\n  theme_minimal() +\n  theme(legend.position=\"right\")  # Coloca la leyenda en la derecha\np_paro_Catalunya\n\n\n\n\n\n\n\n\n\n\nCódigodf_sin_medias_C_Valenciana &lt;- df_sin_medias %&gt;% filter(CCAA.de.su.universidad == \"Comunitat Valenciana\")\ndf_medias_C_Valenciana &lt;- df_medias %&gt;% filter(CCAA.de.su.universidad == \"Comunitat Valenciana\")\n\ndf_sin_medias_C_Valenciana$Cat_principal &lt;- fct_inorder(df_sin_medias_C_Valenciana$Cat_principal)\ndf_medias_C_Valenciana$Cat_principal &lt;- fct_inorder(df_medias_C_Valenciana$Cat_principal)\n\np_paro_C_Valenciana &lt;- ggplot() +\n  geom_rect(data = df_sin_medias_C_Valenciana, aes(xmin = as.numeric(Cat_principal) - 0.4, \n                                                   xmax = as.numeric(Cat_principal) + 0.4, \n                                                   ymin = segment_start, \n                                                   ymax = segment_end, fill = segment_end, \n                                                   alpha = Cat_principal), stat = \"identity\") +  # Mapea alpha a Cat_principal\n  scale_alpha_discrete(range = c(1, 1), name = \"Categoría de estudios\") +  # Esto hace que alpha sea constante, pero aún crea la leyenda\n  geom_point(data = df_medias_C_Valenciana, aes(x = as.numeric(Cat_principal), y = value), color = \"black\", size = 3) +\n  geom_text(data = df_sin_medias_C_Valenciana, aes(x = as.numeric(Cat_principal), y = value, label = Ámbito.de.estudio), \n            size = 3) +\n  scale_fill_gradientn(colours = brewer.pal(8, \"Set2\"), name = \"Escala de colores\") +\n  labs(title = \"Tasa de paro según el estudio cursado\",\n       x = \"Categoría y subcategoría de estudios\",\n       y = \"Tasa de paro (%)\") +\n  scale_x_continuous(breaks = as.numeric(unique(df_sin_medias_C_Valenciana$Cat_principal)), labels = function(x) substr(x, 1, 2)) +\n  theme_minimal() +\n  theme(legend.position=\"right\")  # Coloca la leyenda en la derecha\np_paro_C_Valenciana\n\n\n\n\n\n\n\n\n\n\nCódigodf_sin_medias_Extremadura &lt;- df_sin_medias %&gt;% filter(CCAA.de.su.universidad == \"Extremadura\")\ndf_medias_Extremadura &lt;- df_medias %&gt;% filter(CCAA.de.su.universidad == \"Extremadura\")\n\ndf_sin_medias_Extremadura$Cat_principal &lt;- fct_inorder(df_sin_medias_Extremadura$Cat_principal)\ndf_medias_Extremadura$Cat_principal &lt;- fct_inorder(df_medias_Extremadura$Cat_principal)\n\np_paro_Extremadura &lt;- ggplot() +\n  geom_rect(data = df_sin_medias_Extremadura, aes(xmin = as.numeric(Cat_principal) - 0.4, \n                                                  xmax = as.numeric(Cat_principal) + 0.4, \n                                                  ymin = segment_start, \n                                                  ymax = segment_end, fill = segment_end, \n                                                  alpha = Cat_principal), stat = \"identity\") +  # Mapea alpha a Cat_principal\n  scale_alpha_discrete(range = c(1, 1), name = \"Categoría de estudios\") +  # Esto hace que alpha sea constante, pero aún crea la leyenda\n  geom_point(data = df_medias_Extremadura, aes(x = as.numeric(Cat_principal), y = value), color = \"black\", size = 3) +\n  geom_text(data = df_sin_medias_Extremadura, aes(x = as.numeric(Cat_principal), y = value, label = Ámbito.de.estudio), \n            size = 3) +\n  scale_fill_gradientn(colours = brewer.pal(8, \"Set2\"), name = \"Escala de colores\") +\n  labs(title = \"Tasa de paro según el estudio cursado\",\n       x = \"Categoría y subcategoría de estudios\",\n       y = \"Tasa de paro (%)\") +\n  scale_x_continuous(breaks = as.numeric(unique(df_sin_medias_Extremadura$Cat_principal)), labels = function(x) substr(x, 1, 2)) +\n  theme_minimal() +\n  theme(legend.position=\"right\")  # Coloca la leyenda en la derecha\np_paro_Extremadura\n\n\n\n\n\n\n\n\n\n\nCódigodf_sin_medias_Galicia &lt;- df_sin_medias %&gt;% filter(CCAA.de.su.universidad == \"Galicia\")\ndf_medias_Galicia &lt;- df_medias %&gt;% filter(CCAA.de.su.universidad == \"Galicia\")\n\ndf_sin_medias_Galicia$Cat_principal &lt;- fct_inorder(df_sin_medias_Galicia$Cat_principal)\ndf_medias_Galicia$Cat_principal &lt;- fct_inorder(df_medias_Galicia$Cat_principal)\n\np_paro_Galicia &lt;- ggplot() +\n  geom_rect(data = df_sin_medias_Galicia, aes(xmin = as.numeric(Cat_principal) - 0.4, \n                                              xmax = as.numeric(Cat_principal) + 0.4, \n                                              ymin = segment_start, \n                                              ymax = segment_end, fill = segment_end, \n                                              alpha = Cat_principal), stat = \"identity\") +  # Mapea alpha a Cat_principal\n  scale_alpha_discrete(range = c(1, 1), name = \"Categoría de estudios\") +  # Esto hace que alpha sea constante, pero aún crea la leyenda\n  geom_point(data = df_medias_Galicia, aes(x = as.numeric(Cat_principal), y = value), color = \"black\", size = 3) +\n  geom_text(data = df_sin_medias_Galicia, aes(x = as.numeric(Cat_principal), y = value, label = Ámbito.de.estudio), \n            size = 3) +\n  scale_fill_gradientn(colours = brewer.pal(8, \"Set2\"), name = \"Escala de colores\") +\n  labs(title = \"Tasa de paro según el estudio cursado\",\n       x = \"Categoría y subcategoría de estudios\",\n       y = \"Tasa de paro (%)\") +\n  scale_x_continuous(breaks = as.numeric(unique(df_sin_medias_Galicia$Cat_principal)), labels = function(x) substr(x, 1, 2)) +\n  theme_minimal() +\n  theme(legend.position=\"right\")  # Coloca la leyenda en la derecha\np_paro_Galicia\n\n\n\n\n\n\n\n\n\n\nCódigodf_sin_medias_Madrid &lt;- df_sin_medias %&gt;% filter(CCAA.de.su.universidad == \"Madrid, Comunidad de\")\ndf_medias_Madrid &lt;- df_medias %&gt;% filter(CCAA.de.su.universidad == \"Madrid, Comunidad de\")\n\ndf_sin_medias_Madrid$Cat_principal &lt;- fct_inorder(df_sin_medias_Madrid$Cat_principal)\ndf_medias_Madrid$Cat_principal &lt;- fct_inorder(df_medias_Madrid$Cat_principal)\n\np_paro_Madrid &lt;- ggplot() +\n  geom_rect(data = df_sin_medias_Madrid, aes(xmin = as.numeric(Cat_principal) - 0.4, \n                                             xmax = as.numeric(Cat_principal) + 0.4, \n                                             ymin = segment_start, \n                                             ymax = segment_end, fill = segment_end, \n                                             alpha = Cat_principal), stat = \"identity\") +  # Mapea alpha a Cat_principal\n  scale_alpha_discrete(range = c(1, 1), name = \"Categoría de estudios\") +  # Esto hace que alpha sea constante, pero aún crea la leyenda\n  geom_point(data = df_medias_Madrid, aes(x = as.numeric(Cat_principal), y = value), color = \"black\", size = 3) +\n  geom_text(data = df_sin_medias_Madrid, aes(x = as.numeric(Cat_principal), y = value, label = Ámbito.de.estudio), \n            size = 3) +\n  scale_fill_gradientn(colours = brewer.pal(8, \"Set2\"), name = \"Escala de colores\") +\n  labs(title = \"Tasa de paro según el estudio cursado\",\n       x = \"Categoría y subcategoría de estudios\",\n       y = \"Tasa de paro (%)\") +\n  scale_x_continuous(breaks = as.numeric(unique(df_sin_medias_Madrid$Cat_principal)), labels = function(x) substr(x, 1, 2)) +\n  theme_minimal() +\n  theme(legend.position=\"right\")  # Coloca la leyenda en la derecha\np_paro_Madrid\n\n\n\n\n\n\n\n\n\n\nCódigodf_sin_medias_Murcia &lt;- df_sin_medias %&gt;% filter(CCAA.de.su.universidad == \"Murcia, Región de\")\ndf_medias_Murcia &lt;- df_medias %&gt;% filter(CCAA.de.su.universidad == \"Murcia, Región de\")\n\ndf_sin_medias_Murcia$Cat_principal &lt;- fct_inorder(df_sin_medias_Murcia$Cat_principal)\ndf_medias_Murcia$Cat_principal &lt;- fct_inorder(df_medias_Murcia$Cat_principal)\n\np_paro_Murcia &lt;- ggplot() +\n  geom_rect(data = df_sin_medias_Murcia, aes(xmin = as.numeric(Cat_principal) - 0.4, \n                                             xmax = as.numeric(Cat_principal) + 0.4, \n                                             ymin = segment_start, \n                                             ymax = segment_end, fill = segment_end, \n                                             alpha = Cat_principal), stat = \"identity\") +  # Mapea alpha a Cat_principal\n  scale_alpha_discrete(range = c(1, 1), name = \"Categoría de estudios\") +  # Esto hace que alpha sea constante, pero aún crea la leyenda\n  geom_point(data = df_medias_Murcia, aes(x = as.numeric(Cat_principal), y = value), color = \"black\", size = 3) +\n  geom_text(data = df_sin_medias_Murcia, aes(x = as.numeric(Cat_principal), y = value, label = Ámbito.de.estudio), \n            size = 3) +\n  scale_fill_gradientn(colours = brewer.pal(8, \"Set2\"), name = \"Escala de colores\") +\n  labs(title = \"Tasa de paro según el estudio cursado\",\n       x = \"Categoría y subcategoría de estudios\",\n       y = \"Tasa de paro (%)\") +\n  scale_x_continuous(breaks = as.numeric(unique(df_sin_medias_Murcia$Cat_principal)), labels = function(x) substr(x, 1, 2)) +\n  theme_minimal() +\n  theme(legend.position=\"right\")  # Coloca la leyenda en la derecha\np_paro_Murcia\n\n\n\n\n\n\n\n\n\n\nCódigodf_sin_medias_Navarra &lt;- df_sin_medias %&gt;% filter(CCAA.de.su.universidad == \"Navarra, Comunidad Foral de\")\ndf_medias_Navarra &lt;- df_medias %&gt;% filter(CCAA.de.su.universidad == \"Navarra, Comunidad Foral de\")\n\ndf_sin_medias_Navarra$Cat_principal &lt;- fct_inorder(df_sin_medias_Navarra$Cat_principal)\ndf_medias_Navarra$Cat_principal &lt;- fct_inorder(df_medias_Navarra$Cat_principal)\n\np_paro_Navarra &lt;- ggplot() +\n  geom_rect(data = df_sin_medias_Navarra, aes(xmin = as.numeric(Cat_principal) - 0.4, \n                                              xmax = as.numeric(Cat_principal) + 0.4, \n                                              ymin = segment_start, \n                                              ymax = segment_end, fill = segment_end, \n                                              alpha = Cat_principal), stat = \"identity\") +  # Mapea alpha a Cat_principal\n  scale_alpha_discrete(range = c(1, 1), name = \"Categoría de estudios\") +  # Esto hace que alpha sea constante, pero aún crea la leyenda\n  geom_point(data = df_medias_Navarra, aes(x = as.numeric(Cat_principal), y = value), color = \"black\", size = 3) +\n  geom_text(data = df_sin_medias_Navarra, aes(x = as.numeric(Cat_principal), y = value, label = Ámbito.de.estudio), \n            size = 3) +\n  scale_fill_gradientn(colours = brewer.pal(8, \"Set2\"), name = \"Escala de colores\") +\n  labs(title = \"Tasa de paro según el estudio cursado\",\n       x = \"Categoría y subcategoría de estudios\",\n       y = \"Tasa de paro (%)\") +\n  scale_x_continuous(breaks = as.numeric(unique(df_sin_medias_Navarra$Cat_principal)), labels = function(x) substr(x, 1, 2)) +\n  theme_minimal() +\n  theme(legend.position=\"right\")  # Coloca la leyenda en la derecha\np_paro_Navarra\n\n\n\n\n\n\n\n\n\n\nCódigodf_sin_medias_P_Vasco &lt;- df_sin_medias %&gt;% filter(CCAA.de.su.universidad == \"País Vasco\")\ndf_medias_P_Vasco &lt;- df_medias %&gt;% filter(CCAA.de.su.universidad == \"País Vasco\")\n\ndf_sin_medias_P_Vasco$Cat_principal &lt;- fct_inorder(df_sin_medias_P_Vasco$Cat_principal)\ndf_medias_P_Vasco$Cat_principal &lt;- fct_inorder(df_medias_P_Vasco$Cat_principal)\n\np_paro_P_Vasco &lt;- ggplot() +\n  geom_rect(data = df_sin_medias_P_Vasco, aes(xmin = as.numeric(Cat_principal) - 0.4, \n                                              xmax = as.numeric(Cat_principal) + 0.4, \n                                              ymin = segment_start, \n                                              ymax = segment_end, fill = segment_end, \n                                              alpha = Cat_principal), stat = \"identity\") +  # Mapea alpha a Cat_principal\n  scale_alpha_discrete(range = c(1, 1), name = \"Categoría de estudios\") +  # Esto hace que alpha sea constante, pero aún crea la leyenda\n  geom_point(data = df_medias_P_Vasco, aes(x = as.numeric(Cat_principal), y = value), color = \"black\", size = 3) +\n  geom_text(data = df_sin_medias_P_Vasco, aes(x = as.numeric(Cat_principal), y = value, label = Ámbito.de.estudio), \n            size = 3) +\n  scale_fill_gradientn(colours = brewer.pal(8, \"Set2\"), name = \"Escala de colores\") +\n  labs(title = \"Tasa de paro según el estudio cursado\",\n       x = \"Categoría y subcategoría de estudios\",\n       y = \"Tasa de paro (%)\") +\n  scale_x_continuous(breaks = as.numeric(unique(df_sin_medias_P_Vasco$Cat_principal)), labels = function(x) substr(x, 1, 2)) +\n  theme_minimal() +\n  theme(legend.position=\"right\")  # Coloca la leyenda en la derecha\np_paro_P_Vasco\n\n\n\n\n\n\n\n\n\n\nCódigodf_sin_medias_Rioja &lt;- df_sin_medias %&gt;% filter(CCAA.de.su.universidad == \"Rioja, La\")\ndf_medias_Rioja &lt;- df_medias %&gt;% filter(CCAA.de.su.universidad == \"Rioja, La\")\n\ndf_sin_medias_Rioja$Cat_principal &lt;- fct_inorder(df_sin_medias_Rioja$Cat_principal)\ndf_medias_Rioja$Cat_principal &lt;- fct_inorder(df_medias_Rioja$Cat_principal)\n\np_paro_Rioja &lt;- ggplot() +\n  geom_rect(data = df_sin_medias_Rioja, aes(xmin = as.numeric(Cat_principal) - 0.4, \n                                            xmax = as.numeric(Cat_principal) + 0.4, \n                                            ymin = segment_start, \n                                            ymax = segment_end, fill = segment_end, \n                                            alpha = Cat_principal), stat = \"identity\") +  # Mapea alpha a Cat_principal\n  scale_alpha_discrete(range = c(1, 1), name = \"Categoría de estudios\") +  # Esto hace que alpha sea constante, pero aún crea la leyenda\n  geom_point(data = df_medias_Rioja, aes(x = as.numeric(Cat_principal), y = value), color = \"black\", size = 3) +\n  geom_text(data = df_sin_medias_Rioja, aes(x = as.numeric(Cat_principal), y = value, label = Ámbito.de.estudio), \n            size = 3) +\n  scale_fill_gradientn(colours = brewer.pal(8, \"Set2\"), name = \"Escala de colores\") +\n  labs(title = \"Tasa de paro según el estudio cursado\",\n       x = \"Categoría y subcategoría de estudios\",\n       y = \"Tasa de paro (%)\") +\n  scale_x_continuous(breaks = as.numeric(unique(df_sin_medias_Rioja$Cat_principal)), labels = function(x) substr(x, 1, 2)) +\n  theme_minimal() +\n  theme(legend.position=\"right\")  # Coloca la leyenda en la derecha\np_paro_Rioja\n\n\n\n\n\n\n\n\n\nEste ha sido un auténtico quebradero de cabeza. Empezar por este quizás haya sido la peor de las decisiones, ya que algo que parecía sencillo se ha convertido en uno de los gráficos más complicados que seguramente se verán este año.\nEn primer lugar, hemos tenido que reemplazar a mano gran parte de los datos en texto, pues era esencial para que el gráfico fuera legible. Pero, debido a cómo estaban escritos los datos (seguramente por algún acento y paréntesis), he tenido que reconvertir el texto con ‘replace_patterns’. De esta forma, los datos ya estaban cambiados y hemos aprovechado para eliminar los valores que eran 0, ya que son equivalentes a NA.\nEn segundo lugar, hemos creado una categoría nueva, pues la principal estaba junto a las subcategorías en la misma columna. También tuvimos que eliminar las subcategorías de su celda original, pero manteniendo de momento las celdas con ‘_media’ y ordenando las ‘c_principales’ de forma ascendente. Tuvimos que crear una nueva columna con los números de las ‘c_principales’ para que el eje y tuviera un orden numérico.\nEn tercer lugar, obtuvimos un df con las columnas vacías para posteriormente calcular el valor máximo para cada combinación de ‘c_principal’ y ‘CC.AA.’ (ya que esta era la parte superior de las barras). Después, hubo que crear un ‘df_medias’ (pues eran las celdas de ‘c_principales’ originalmente) y un ‘df_sin medias’ donde está realmente este trabajo.\nEn cuarto lugar, hubo que conseguir para los valores normales la diferencia entre su valor y el inferior siguiente dentro de la misma categoría, logrando que el valor más inferior buscara el 0, ya que no había valores inferiores.\nUna vez todo conseguido, pudimos separar los datos por comunidad, creando un gráfico de barras para cada una. Pero la creación del gráfico no fue sencilla: tuvimos que crear mediante ‘geom_rect’ las porciones de cada barra para que cambiase de color la barra cada vez que había un valor nuevo. De lo contrario, se sumaban todos los valores. Intentamos utilizar ‘geom_text_repel’ para que se vieran mejor los nombres, pero no funcionó seguramente por algún tipo de alteración en los datos. También utilizamos el ‘df_medias’ para añadir los puntos y una paleta de colores difuminada para que se vieran los cambios en cada barra, y esta última parte del código para cada comunidad.\n\n\n\n\nInformación sobre la sesión\nAbajo muestro mi entorno de trabajo y paquetes utilizados\n\n\n current session info \n\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.3.1 (2023-06-16 ucrt)\n os       Windows 11 x64 (build 22621)\n system   x86_64, mingw32\n ui       RTerm\n language (EN)\n collate  Spanish_Spain.utf8\n ctype    Spanish_Spain.utf8\n tz       Europe/Madrid\n date     2023-12-20\n pandoc   3.1.1 @ C:/Program Files/RStudio/resources/app/bin/quarto/bin/tools/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package       * version date (UTC) lib source\n bslib           0.5.1   2023-08-11 [1] CRAN (R 4.3.1)\n cachem          1.0.8   2023-05-01 [1] CRAN (R 4.3.1)\n cellranger      1.1.0   2016-07-27 [1] CRAN (R 4.3.1)\n class           7.3-22  2023-05-03 [2] CRAN (R 4.3.1)\n classInt        0.4-10  2023-09-05 [1] CRAN (R 4.3.1)\n cli             3.6.1   2023-03-23 [1] CRAN (R 4.3.1)\n clipr           0.8.0   2022-02-22 [1] CRAN (R 4.3.1)\n colorspace      2.1-0   2023-01-23 [1] CRAN (R 4.3.1)\n cowplot         1.1.1   2020-12-30 [1] CRAN (R 4.3.1)\n crayon          1.5.2   2022-09-29 [1] CRAN (R 4.3.1)\n crosstalk       1.2.0   2021-11-04 [1] CRAN (R 4.3.1)\n data.table      1.14.8  2023-02-17 [1] CRAN (R 4.3.1)\n DBI             1.1.3   2022-06-18 [1] CRAN (R 4.3.1)\n desc            1.4.2   2022-09-08 [1] CRAN (R 4.3.2)\n details         0.3.0   2022-03-27 [1] CRAN (R 4.3.2)\n digest          0.6.33  2023-07-07 [1] CRAN (R 4.3.1)\n dplyr         * 1.1.3   2023-09-03 [1] CRAN (R 4.3.1)\n e1071           1.7-13  2023-02-01 [1] CRAN (R 4.3.1)\n ellipsis        0.3.2   2021-04-29 [1] CRAN (R 4.3.1)\n evaluate        0.22    2023-09-29 [1] CRAN (R 4.3.1)\n fansi           1.0.5   2023-10-08 [1] CRAN (R 4.3.1)\n farver          2.1.1   2022-07-06 [1] CRAN (R 4.3.1)\n fastmap         1.1.1   2023-02-24 [1] CRAN (R 4.3.1)\n flexdashboard * 0.6.2   2023-08-11 [1] CRAN (R 4.3.2)\n forcats       * 1.0.0   2023-01-29 [1] CRAN (R 4.3.1)\n generics        0.1.3   2022-07-05 [1] CRAN (R 4.3.1)\n gganimate     * 1.0.8   2022-09-08 [1] CRAN (R 4.3.2)\n ggfittext       0.10.1  2023-09-05 [1] CRAN (R 4.3.1)\n ggplot2       * 3.4.4   2023-10-12 [1] CRAN (R 4.3.1)\n ggrepel       * 0.9.4   2023-10-13 [1] CRAN (R 4.3.2)\n ggthemes      * 5.0.0   2023-11-21 [1] CRAN (R 4.3.2)\n glue            1.6.2   2022-02-24 [1] CRAN (R 4.3.1)\n gridBase        0.4-7   2014-02-24 [1] CRAN (R 4.3.2)\n gridExtra       2.3     2017-09-09 [1] CRAN (R 4.3.1)\n gtable          0.3.4   2023-08-21 [1] CRAN (R 4.3.1)\n hms             1.1.3   2023-03-21 [1] CRAN (R 4.3.1)\n htmltools       0.5.6.1 2023-10-06 [1] CRAN (R 4.3.1)\n htmlwidgets     1.6.2   2023-03-17 [1] CRAN (R 4.3.1)\n httpuv          1.6.11  2023-05-11 [1] CRAN (R 4.3.1)\n httr            1.4.7   2023-08-15 [1] CRAN (R 4.3.1)\n igraph          1.5.1   2023-08-10 [1] CRAN (R 4.3.1)\n jquerylib       0.1.4   2021-04-26 [1] CRAN (R 4.3.1)\n jsonlite        1.8.7   2023-06-29 [1] CRAN (R 4.3.1)\n KernSmooth      2.23-21 2023-05-03 [2] CRAN (R 4.3.1)\n knitr           1.45    2023-10-30 [1] CRAN (R 4.3.2)\n labeling        0.4.3   2023-08-29 [1] CRAN (R 4.3.1)\n later           1.3.1   2023-05-02 [1] CRAN (R 4.3.1)\n lazyeval        0.2.2   2019-03-15 [1] CRAN (R 4.3.1)\n lifecycle       1.0.4   2023-11-07 [1] CRAN (R 4.3.2)\n lubridate     * 1.9.3   2023-09-27 [1] CRAN (R 4.3.1)\n magick          2.8.1   2023-10-22 [1] CRAN (R 4.3.1)\n magrittr        2.0.3   2022-03-30 [1] CRAN (R 4.3.1)\n mime            0.12    2021-09-28 [1] CRAN (R 4.3.0)\n munsell         0.5.0   2018-06-12 [1] CRAN (R 4.3.1)\n pillar          1.9.0   2023-03-22 [1] CRAN (R 4.3.1)\n pkgconfig       2.0.3   2019-09-22 [1] CRAN (R 4.3.1)\n plotly        * 4.10.3  2023-10-21 [1] CRAN (R 4.3.2)\n plyr          * 1.8.9   2023-10-02 [1] CRAN (R 4.3.1)\n png             0.1-8   2022-11-29 [1] CRAN (R 4.3.0)\n prettyunits     1.2.0   2023-09-24 [1] CRAN (R 4.3.1)\n progress        1.2.2   2019-05-16 [1] CRAN (R 4.3.1)\n promises        1.2.1   2023-08-10 [1] CRAN (R 4.3.1)\n proxy           0.4-27  2022-06-09 [1] CRAN (R 4.3.1)\n purrr         * 1.0.2   2023-08-10 [1] CRAN (R 4.3.1)\n pxR           * 0.42.7  2022-11-23 [1] CRAN (R 4.3.2)\n R6              2.5.1   2021-08-19 [1] CRAN (R 4.3.1)\n RColorBrewer  * 1.1-3   2022-04-03 [1] CRAN (R 4.3.1)\n Rcpp            1.0.11  2023-07-06 [1] CRAN (R 4.3.1)\n readr         * 2.1.4   2023-02-10 [1] CRAN (R 4.3.1)\n readxl        * 1.4.3   2023-07-06 [1] CRAN (R 4.3.1)\n reshape2      * 1.4.4   2020-04-09 [1] CRAN (R 4.3.1)\n RJSONIO       * 1.3-1.9 2023-11-27 [1] CRAN (R 4.3.2)\n rlang           1.1.1   2023-04-28 [1] CRAN (R 4.3.1)\n rmarkdown       2.25    2023-09-18 [1] CRAN (R 4.3.1)\n rprojroot       2.0.3   2022-04-02 [1] CRAN (R 4.3.1)\n rstudioapi      0.15.0  2023-07-07 [1] CRAN (R 4.3.1)\n sass            0.4.7   2023-07-15 [1] CRAN (R 4.3.1)\n scales          1.2.1   2022-08-20 [1] CRAN (R 4.3.1)\n sessioninfo     1.2.2   2021-12-06 [1] CRAN (R 4.3.2)\n sf            * 1.0-14  2023-07-11 [1] CRAN (R 4.3.1)\n shiny           1.7.5.1 2023-10-14 [1] CRAN (R 4.3.1)\n stringi         1.7.12  2023-01-11 [1] CRAN (R 4.3.0)\n stringr       * 1.5.0   2022-12-02 [1] CRAN (R 4.3.1)\n tibble        * 3.2.1   2023-03-20 [1] CRAN (R 4.3.1)\n tidyr         * 1.3.0   2023-01-24 [1] CRAN (R 4.3.1)\n tidyselect      1.2.0   2022-10-10 [1] CRAN (R 4.3.1)\n tidyverse     * 2.0.0   2023-02-22 [1] CRAN (R 4.3.1)\n timechange      0.2.0   2023-01-11 [1] CRAN (R 4.3.1)\n treemap       * 2.4-4   2023-05-25 [1] CRAN (R 4.3.2)\n treemapify    * 2.5.6   2023-09-30 [1] CRAN (R 4.3.2)\n tweenr          2.0.2   2022-09-06 [1] CRAN (R 4.3.1)\n tzdb            0.4.0   2023-05-12 [1] CRAN (R 4.3.1)\n units           0.8-4   2023-09-13 [1] CRAN (R 4.3.1)\n utf8            1.2.3   2023-01-31 [1] CRAN (R 4.3.1)\n vctrs           0.6.4   2023-10-12 [1] CRAN (R 4.3.1)\n viridis       * 0.6.4   2023-07-22 [1] CRAN (R 4.3.2)\n viridisLite   * 0.4.2   2023-05-02 [1] CRAN (R 4.3.1)\n withr           2.5.2   2023-10-30 [1] CRAN (R 4.3.2)\n xfun            0.40    2023-08-09 [1] CRAN (R 4.3.1)\n xml2            1.3.5   2023-07-06 [1] CRAN (R 4.3.1)\n xtable          1.8-4   2019-04-21 [1] CRAN (R 4.3.1)\n yaml            2.3.7   2023-01-23 [1] CRAN (R 4.3.0)\n\n [1] C:/Users/david/AppData/Local/R/win-library/4.3\n [2] C:/Program Files/R/R-4.3.1/library\n\n──────────────────────────────────────────────────────────────────────────────"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Análisis económico y demográfico de España. Retos para los jóvenes españoles",
    "section": "",
    "text": "Hola, somos David Bayot (dabase@alumni.uv.es), Javier Mascarell (jamasga@alumni.uv.es) y Carlos Vicedo (carvial2@alumni.uv.es)\nEsta web sirve para presentar el trabajo en equipo para la asignatura “Programación y manejo de datos en la era Del Big Data”, optativa de GECO en la Facultad de Economía de la Universitat de València.\nLa web de la asignatura está aquí y los trabajos de mis compañeros de curso puedes verlos aquí.\nNuestro trabajo lleva por título : “Análisis económico y demográfico de España. Retos para los jóvenes españoles”. El objetivo es analizar algunas de las variables económicas y demográficas del país y ver cómo afecta este contexto a los jóvenes.\nEl trabajo puede verse aquí, y las slides aquí."
  },
  {
    "objectID": "my_slides_BigData.html#introducción",
    "href": "my_slides_BigData.html#introducción",
    "title": "Análisis económico y demográfico de España. Retos para los jóvenes españoles",
    "section": "Introducción",
    "text": "Introducción\nEn este trabajao primero observaremos algunas variables macroeconómicas de España para situar al país en contexto. Después, veremos distintos datos demográficos para realizar algunas proyecciones a futuro sobre trabajo y estudios."
  },
  {
    "objectID": "my_slides_BigData.html#datos",
    "href": "my_slides_BigData.html#datos",
    "title": "Análisis económico y demográfico de España. Retos para los jóvenes españoles",
    "section": "Datos",
    "text": "Datos\nLos datos utilizados para la elaboración de este trabajo han sido extraídos del FRED pero, en su mayoría, del INE, tanto en formato excel como en px"
  },
  {
    "objectID": "my_slides_BigData.html#variables-económicas",
    "href": "my_slides_BigData.html#variables-económicas",
    "title": "Análisis económico y demográfico de España. Retos para los jóvenes españoles",
    "section": "Variables económicas",
    "text": "Variables económicas\nEmpezaremos poniendo a España en su contexto económico."
  },
  {
    "objectID": "my_slides_BigData.html#pib",
    "href": "my_slides_BigData.html#pib",
    "title": "Análisis económico y demográfico de España. Retos para los jóvenes españoles",
    "section": "PIB",
    "text": "PIB"
  },
  {
    "objectID": "my_slides_BigData.html#renta-media-por-comunidades",
    "href": "my_slides_BigData.html#renta-media-por-comunidades",
    "title": "Análisis económico y demográfico de España. Retos para los jóvenes españoles",
    "section": "Renta media por comunidades",
    "text": "Renta media por comunidades"
  },
  {
    "objectID": "my_slides_BigData.html#comunidades-de-mayor-renta-media-en-2021",
    "href": "my_slides_BigData.html#comunidades-de-mayor-renta-media-en-2021",
    "title": "Análisis económico y demográfico de España. Retos para los jóvenes españoles",
    "section": "Comunidades de mayor renta media en 2021",
    "text": "Comunidades de mayor renta media en 2021"
  },
  {
    "objectID": "my_slides_BigData.html#comunidades-de-mayor-renta-media-en-2021-minimalista",
    "href": "my_slides_BigData.html#comunidades-de-mayor-renta-media-en-2021-minimalista",
    "title": "Análisis económico y demográfico de España. Retos para los jóvenes españoles",
    "section": "Comunidades de mayor renta media en 2021 (minimalista)",
    "text": "Comunidades de mayor renta media en 2021 (minimalista)"
  },
  {
    "objectID": "my_slides_BigData.html#ipc-de-la-vivienda",
    "href": "my_slides_BigData.html#ipc-de-la-vivienda",
    "title": "Análisis económico y demográfico de España. Retos para los jóvenes españoles",
    "section": "IPC de la vivienda",
    "text": "IPC de la vivienda"
  },
  {
    "objectID": "my_slides_BigData.html#ipc-de-la-vivienda-2",
    "href": "my_slides_BigData.html#ipc-de-la-vivienda-2",
    "title": "Análisis económico y demográfico de España. Retos para los jóvenes españoles",
    "section": "IPC de la vivienda (2)",
    "text": "IPC de la vivienda (2)"
  },
  {
    "objectID": "my_slides_BigData.html#treemaps",
    "href": "my_slides_BigData.html#treemaps",
    "title": "Análisis económico y demográfico de España. Retos para los jóvenes españoles",
    "section": "TREEMAPS",
    "text": "TREEMAPS"
  },
  {
    "objectID": "my_slides_BigData.html#sintecho",
    "href": "my_slides_BigData.html#sintecho",
    "title": "Análisis económico y demográfico de España. Retos para los jóvenes españoles",
    "section": "Sintecho",
    "text": "Sintecho"
  },
  {
    "objectID": "my_slides_BigData.html#desempleo-por-comunidades",
    "href": "my_slides_BigData.html#desempleo-por-comunidades",
    "title": "Análisis económico y demográfico de España. Retos para los jóvenes españoles",
    "section": "Desempleo por comunidades",
    "text": "Desempleo por comunidades"
  },
  {
    "objectID": "my_slides_BigData.html#por-edad",
    "href": "my_slides_BigData.html#por-edad",
    "title": "Análisis económico y demográfico de España. Retos para los jóvenes españoles",
    "section": "Por edad",
    "text": "Por edad"
  },
  {
    "objectID": "my_slides_BigData.html#por-sexo",
    "href": "my_slides_BigData.html#por-sexo",
    "title": "Análisis económico y demográfico de España. Retos para los jóvenes españoles",
    "section": "Por sexo",
    "text": "Por sexo"
  },
  {
    "objectID": "my_slides_BigData.html#demografía",
    "href": "my_slides_BigData.html#demografía",
    "title": "Análisis económico y demográfico de España. Retos para los jóvenes españoles",
    "section": "Demografía",
    "text": "Demografía\nAhora vamos a ver algunos datos demográficos"
  },
  {
    "objectID": "my_slides_BigData.html#pirámide-poblacional",
    "href": "my_slides_BigData.html#pirámide-poblacional",
    "title": "Análisis económico y demográfico de España. Retos para los jóvenes españoles",
    "section": "Pirámide poblacional",
    "text": "Pirámide poblacional\n\n#&gt;     Age       M       F\n#&gt; 1   0-4  924878  874166\n#&gt; 2   5-9 1110682 1046828\n#&gt; 3 10-14 1259715 1182213\n#&gt; 4 15-19 1312515 1233843\n#&gt; 5 20-24 1268194 1189567\n#&gt; 6 25-29 1263026 1220525\n#&gt; # A tibble: 6 × 5\n#&gt;   Age   Gender Population PopPerc signal\n#&gt;   &lt;chr&gt; &lt;chr&gt;       &lt;int&gt;   &lt;dbl&gt;  &lt;dbl&gt;\n#&gt; 1 0-4   M          924878    1.95      1\n#&gt; 2 0-4   F          874166   -1.84     -1\n#&gt; 3 5-9   M         1110682    2.34      1\n#&gt; 4 5-9   F         1046828   -2.2      -1\n#&gt; 5 10-14 M         1259715    2.65      1\n#&gt; 6 10-14 F         1182213   -2.49     -1\n#&gt; NULL"
  },
  {
    "objectID": "my_slides_BigData.html#insercion-laboral",
    "href": "my_slides_BigData.html#insercion-laboral",
    "title": "Análisis económico y demográfico de España. Retos para los jóvenes españoles",
    "section": "INSERCION LABORAL",
    "text": "INSERCION LABORAL\n\n\n\nSlides hechas con Quarto"
  },
  {
    "objectID": "my_trabajo_BigDataJ.html",
    "href": "my_trabajo_BigDataJ.html",
    "title": "Análisis económico y demográfico de España. Retos para los jóvenes españoles",
    "section": "",
    "text": "En este trabajo primero observaremos algunas variables macroeconómicas de España para situar al país en contexto. Después, veremos distintos datos demográficos para realizar algunas proyecciones a futuro sobre trabajo y estudios."
  },
  {
    "objectID": "my_trabajo_BigDataJ.html#pib-de-españa",
    "href": "my_trabajo_BigDataJ.html#pib-de-españa",
    "title": "Análisis económico y demográfico de España. Retos para los jóvenes españoles",
    "section": "3.1.PIB de España",
    "text": "3.1.PIB de España\nLa primera variable económica a tratar será el PIB nominal de la nación. Podemos observar una tendencia creciente desde el 1995 hasta el 2008, momento en el que comienza la financiera a raiz del sobreendeudamiento del sector privado en los años previos. La recuperación económica no se vislumbra hasta principios del 2014, una recuperación basada en mayor grado en el crecimiento poblacional que en el incremento de la productividad. Por último, la crisis del Coronavirus incidió de forma significativa en la riqueza de la nación, dando lugar a una caída de la actividad económica que, sin embargo, se recuperó en pocos años.\n\nCódigoruta_archivo &lt;- \"./datos/pib.xls\"\ndf_PIB &lt;- read_excel(ruta_archivo)\n\nggplot(data = df_PIB, aes(x = Fecha, y = pib)) +\n  geom_line(color = \"blue\", size = 2) +\n  labs(x = \"Año\", y = \"PIB(en millones)\", title = \"Producto Interior Bruto España (1995-2020)\",\n       caption = \"Elaboración propia a partir de datos del INE\") +\n  theme_economist() +\n  annotate(\"rect\",\n           xmin = as.POSIXct(\"2008-01-01\"), \n           xmax = as.POSIXct(\"2014-01-01\"),  \n           ymin = -Inf,\n           ymax = Inf,\n           alpha = 0.2,\n           fill = \"red\") +\n  annotate(geom = \"text\",\n           x = as.POSIXct(\"2011-01-01\"),  \n           y = 1200000,  \n           label = \"Crisis inmobiliaria\",\n           size = 5) +\n  annotate(\"rect\",\n           xmin = as.POSIXct(\"2019-01-01\"), \n           xmax = as.POSIXct(\"2022-01-01\"),  \n           ymin = -Inf,\n           ymax = Inf,\n           alpha = 0.2,\n           fill = \"red\")+\n  annotate(geom = \"text\",\n           x = as.POSIXct(\"2019-01-01\"),  \n           y = 1300000,  \n           label = \"Crisis Coronavirus\",\n           size = 5) +\n  coord_cartesian(xlim = as.POSIXct(c(\"1995-01-01\", \"2023-01-01\")),   \n                  ylim = c(600000, 1400000))"
  },
  {
    "objectID": "my_trabajo_BigDataJ.html#pib-top-5-ccaa",
    "href": "my_trabajo_BigDataJ.html#pib-top-5-ccaa",
    "title": "Análisis económico y demográfico de España. Retos para los jóvenes españoles",
    "section": "3.2.PIB top 5 CCAA",
    "text": "3.2.PIB top 5 CCAA\nLos dos siguientes gráficos vienen a mostrar lo mismo: el PIB de cada una de las comunidades autónomas del país. La creación de dos gráficos obedece a una evidéncia empirica: la gran disparidad poblacional entre las diversas regiones, lo cual impedía el visualizar correctamente los datos de las regiones más pequeñas (en términos poblacionales).\nEn el primer grafico, podemos observar la evolución económica de las 5 regiones más ricas de España: Cataluña, Madrid, Andalucía, Comunitat Valenciana y País Vasco. En conjunto conforman un gráfico un tanto anodino por la similitud en el esdevenir económico del conjunto de regiones españolas. Este hecho se debe, sin ninguna duda, a que todas las CCAA tienen una configuración sectorial muy parecida y, además, son interdependientes entre sí por pertenecer todas a un mismo estado. Los shock que afrontan las distintas regiones son los mismos y sus efectos, también.\n\nCódigoruta_archivo &lt;- \"./datos/pib_ccaa_top5.xls\"\ndf_PIB_CCAA_TOP5 &lt;- read_excel(ruta_archivo)\ndf_PIB_CCAA_TOP5 &lt;- na.omit(df_PIB_CCAA_TOP5)\n\n\ndf_PIB_CCAA_TOP5&lt;- df_PIB_CCAA_TOP5 %&gt;% \n  pivot_longer(cols = 2:7, names_to = \"Fecha\")\n\ndf_PIB_CCAA_TOP5$Comunidad_Autonoma &lt;- as.factor(df_PIB_CCAA_TOP5$Comunidad_Autonoma)\n\ngrafico_3&lt;-ggplot(data = df_PIB_CCAA_TOP5, aes(x = Fecha, y = value, color = Comunidad_Autonoma, group = Comunidad_Autonoma)) +\n  geom_line(size = 1) +\n  labs(x = \"Año\", y = \"PIB(en miles)\", \n       title = \"Producto Interior por CCAA (2016-2021)\",\n       caption = \"Elaboración propia a partir de datos del INE\") +\n  theme_solarized_2()+theme(legend.position = \"none\")+scale_y_continuous(labels = scales::comma)\n\nggplotly(grafico_3)"
  },
  {
    "objectID": "my_trabajo_BigDataJ.html#pib-resto-ccaa",
    "href": "my_trabajo_BigDataJ.html#pib-resto-ccaa",
    "title": "Análisis económico y demográfico de España. Retos para los jóvenes españoles",
    "section": "3.3.PIB resto CCAA",
    "text": "3.3.PIB resto CCAA\nSi observamos el “furgon de cola” autonómico, podremos detectar dos excepciones a la afirmación anunciada anteriormente: las Islas Canarias y les Illes Balears. Ambos archipiélagos tienen en común el tener una gran dependencia del turismo. Es, por lo tanto, entendible que estas regiones hayan experimentado una caida transitoria del PIB mayor.\n\nCódigoruta_archivo &lt;- \"./datos/pib_ccaa.xls\"\ndf_PIB_CCAA &lt;- read_excel(ruta_archivo)\ndf_PIB_CCAA &lt;- na.omit(df_PIB_CCAA)\n\n\ndf_PIB_CCAA&lt;- df_PIB_CCAA %&gt;% \n  pivot_longer(cols = 2:7, names_to = \"Fecha\")\n\ndf_PIB_CCAA$Comunidad_Autonoma &lt;- as.factor(df_PIB_CCAA$Comunidad_Autonoma)\n\ngrafico_2&lt;-ggplot(data = df_PIB_CCAA, aes(x = Fecha, y = value, color = Comunidad_Autonoma, group = Comunidad_Autonoma)) +\n  geom_line(size = 1) +\n  labs(x = NULL, y = \"PIB(en miles)\", \n       title = \"Producto Interior por CCAA (2016-2021)\",\n       caption = \"Elaboración propia a partir de datos del INE\") +\n  theme_solarized_2()+theme(legend.position = \"none\")+scale_y_continuous(labels = scales::comma)\n\nggplotly(grafico_2)\n\n\n\n\n\n\n\nRenta media por comunidades\nComunidades de mayor renta media en 2021\nComunidades de mayor renta media en 2021 (minimalista)\n\n\n\nAhora vamos a ver la renta media por comunidades. Al usar la medida per cápita, el orden de las comunidades mejor posicionadas cambia. El orden varía, y Andaluciía deja de estar presente en el top.\n\nCódigodf_Renta_media &lt;- Renta_media %&gt;%\n  drop_na() %&gt;%\n  rename(Comunidad = Unidades.territoriales, rentamedia = value) %&gt;%\n  arrange(desc(Periodo)) %&gt;%\n  filter(Indicadores.de.renta.media == \"Renta neta media por persona\") %&gt;%\n  filter(Comunidad %in% c(\"Andalucía\", \"Aragón\", \"Asturrias, Principado de\", \"Balears, Illes\", \"Canarias\", \"Cantabria\", \"Castilla y León\", \"Castilla - La Mancha\", \"Cataluña\", \"Comunitat Valenciana\", \"Extremadura\", \"Galicia\", \"Madrid, Comunidad de\", \"Murcia, Región de\", \"Navarra, Comunidad Foral de\", \"País Vasco\", \"Rioja, La\", \"Ceuta\", \"Melilla\"))\n\ndf_Renta_media$Periodo &lt;- factor(df_Renta_media$Periodo, levels = sort(unique(df_Renta_media$Periodo), decreasing = TRUE))\n\ngrafo1 &lt;- df_Renta_media %&gt;%\n  ggplot(aes(x=Periodo, y=rentamedia, group=Comunidad, color=Comunidad)) +\n    geom_line() +\n  labs(x = NULL, y = \"Valor en euros\", \n       title = \"Renta media por CCAA (2016-2021)\") +\n    theme_solarized() \nggplotly(grafo1)\n\n\n\n\n\n\n\nEn forma de gráfico de barras puede ser un poco difícil discernir cuál es la comunidad autónoma con mayor renta media.\n\nCódigodf_top_renta_media &lt;- df_Renta_media %&gt;%\n  filter(Periodo == \"2021\") %&gt;%\n  slice_max(rentamedia, n = 5) \n\ngrafo2 &lt;- df_top_renta_media %&gt;%\nggplot(aes(x=Comunidad, y=rentamedia, group=Comunidad, color=Comunidad)) +\n  labs(x = NULL, y = \"Renta media en euros\", \n       title = \"5 mayores comunidades autónomas por renta media en euros\") +\n  geom_bar(stat = \"identity\") +\n  theme_clean() \nggplotly(grafo2)\n\n\n\n\n\n\n\nEsta representación más simple mediante puntos permite ver claramente que el País Vasco ocupa el primer puesto.\n\nCódigodf_top_renta_media &lt;- df_Renta_media %&gt;%\n  filter(Periodo == \"2021\") %&gt;%\n  slice_max(rentamedia, n = 5) \n\ngrafo2 &lt;- df_top_renta_media %&gt;%\nggplot(aes(x=Periodo, y=rentamedia, group=Comunidad, color=Comunidad)) +\n  labs(x = NULL, y = \"Renta media en euros\", \n       title = \"5 mayores comunidades autónomas por renta media en euros\") +\n  geom_point() +\n  theme_clean() \nggplotly(grafo2)"
  },
  {
    "objectID": "my_trabajo_BigDataJ.html#comparativa-de-la-de-la-vivienda-entre-ccaa-2007-2022",
    "href": "my_trabajo_BigDataJ.html#comparativa-de-la-de-la-vivienda-entre-ccaa-2007-2022",
    "title": "Análisis económico y demográfico de España. Retos para los jóvenes españoles",
    "section": "4.1.Comparativa de la △% de la vivienda entre CCAA (2007-2022)",
    "text": "4.1.Comparativa de la △% de la vivienda entre CCAA (2007-2022)\n\nCódigoIPC_vivienda &lt;- read.px(\"datos/IPC_vivienda.px\") %&gt;% as.data.frame()\n\n## TREEMAPS\n\ndf_vivienda_T4 &lt;- IPC_vivienda %&gt;%\n  filter(Índices.y.tasas == \"Variación anual\",\n         General..vivienda.nueva.y.de.segunda.mano == \"General\",\n         str_detect(Periodo, \"T4\"))\n  \nresultado_viv &lt;- df_vivienda_T4 %&gt;%\n  group_by(Comunidades.y.Ciudades.Autónomas) %&gt;%\n  do(Suma_de_Value = sum(.$value, na.rm = TRUE)) %&gt;%\n  ungroup()\n\n#ELIMINA LOS NUMERO DE COMUNIDADES\nresultado_viv &lt;- resultado_viv %&gt;%\n  mutate(Comunidades.y.Ciudades.Autónomas = gsub(\"^\\\\d+\\\\s+\", \"\", Comunidades.y.Ciudades.Autónomas))\n\nresultado_viv$Suma_de_Value &lt;- as.numeric(resultado_viv$Suma_de_Value)\n\n# DataFrame con Suma de Value positivos\ndf_positivos_viv &lt;- resultado_viv %&gt;%\n  filter(Suma_de_Value &gt; 0)\n\n# DataFrame con Suma de Value negativos\ndf_negativos_viv &lt;- resultado_viv %&gt;%\n  filter(Suma_de_Value &lt; 0)\n\n## HAY QUE CONSIDERAR QUE CATALUÑA ES MUY GRANDE ENTONCES PUEDE QUE EN BARCELONA SI HAYAN AUMENTOS MUY ELEVADOS, MIENTRAS QUE EN LAS ZONAS RURALES HAYAN GRANDES DESCENSOS\n\n##Nueva columna con logaritmos para reducir las diferencias de los bloques\ndf_positivos_viv &lt;- df_positivos_viv %&gt;%\n  mutate(Suma_de_Value_Log = log1p(Suma_de_Value))  # Logaritmo natural más 1 para evitar log(0)\n\n##Debemos transformarlos a positivos ya que hay que hacer logaritmos\ndf_negativos_viv &lt;- df_negativos_viv %&gt;%\n  mutate(Suma_de_Value = ifelse(Suma_de_Value &lt; 0, abs(Suma_de_Value), Suma_de_Value))\n\n##Nueva columna con logaritmos para reducir las diferencias de los bloques\ndf_negativos_viv &lt;- df_negativos_viv %&gt;%\n  mutate(Suma_de_Value_Log = log1p(Suma_de_Value)) \n\np_viv_positive &lt;- ggplot(df_positivos_viv, aes(area = Suma_de_Value_Log, label = paste(Comunidades.y.Ciudades.Autónomas, Suma_de_Value, sep = \"\\n\"))) +\n  geom_treemap(fill = \"green\", colour = \"black\", size = 1.5) +\n  geom_treemap_text(colour = \"black\", place = \"centre\", size = 10) +\n  theme(panel.border = element_rect(color = \"black\", fill = NA, size = 2)) +\n  coord_fixed(ratio = 0.7)# Agregar un borde alrededor del gráfico\n\np_viv_negative &lt;- ggplot(df_negativos_viv, aes(area = Suma_de_Value_Log, label = paste(Comunidades.y.Ciudades.Autónomas, paste0(\"-\", Suma_de_Value), sep = \"\\n\"))) +\n  geom_treemap(fill = \"red\", colour = \"black\", size = 1.5) +  \n  geom_treemap_text(colour = \"black\", place = \"centre\", size = 10) +\n  theme(panel.border = element_rect(color = \"black\", fill = NA, size = 2)) +\n  coord_fixed(ratio = 0.7)\n\n\n\n\n△% positiva y negativa del P(€) Vivienda por CC.AA.\nProcedimiento\n\n\n\n\nCódigoplot(p_viv_positive) \n\nplot(p_viv_negative)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPara realizar este Treemap, hemos tenido que filtrar los datos que nos convenían para facilitar el manejo de los df’s. En este caso concreto, hemos considerado todas las viviendas, la variación anual y únicamente los T4 (cuartos trimestres). Posteriormente, agrupamos por Comunidades y realizamos la suma de los valores para obtener la variación acumulada durante todos los años. Sin embargo, tuvimos que eliminar los años que acompañaban a T4 para continuar.\nUna vez obtenido, dividimos el df en dos distintos: uno para los valores positivos y otro para los negativos. Para que los cuadros no se vieran muy contrastados entre sí y se apreciaran las pequeñas variaciones, cambiamos la escala a logarítmica, creando una nueva columna con los valores en logaritmo. Aquí tuvimos un ligero problema, ya que para cambiar a logaritmo tuvimos que convertir los valores negativos en positivos.\nSobre los Treemaps, es importante mencionar que cambiamos la proporción del rectángulo. Utilizamos la función ‘paste’ de ‘label’ con =‘barra + n’ para poder mostrar tanto la comunidad como el valor en los bloques. Además, tuvimos que añadir un guion en ‘label’ a los valores que estaban positivos pero que queríamos mostrar como negativos.\nPara poder colocar los dos juntos en la página web, utilizamos ‘#| column: screen-inset-shaded’ y abajo ‘#| layout-nrow: 1’ antes de escribir el código.\n\n\n\nEn estos Treemaps, podemos observar la variación total acumulada desde el cuarto trimestre de 2007 hasta el cuarto trimestre de 2022 en el precio medio de todas las viviendas (tanto nuevas como de segunda mano) vendidas a lo largo de estos últimos años en las diferentes Comunidades Autónomas de nuestro país. Hay varios hechos a considerar para poder analizar los cuadros con una perspectiva adecuada. El primero es que en 2007, el precio de la vivienda había experimentado una fuerte subida respecto a los años anteriores, encontrándose en plena burbuja inmobiliaria. Por lo tanto, no es sorprendente que en muchos territorios el precio haya sufrido grandes reducciones en promedio desde entonces, algo que debería considerar cualquier persona con expectativas de invertir a medio plazo en este sector. Otro hecho que debemos tener en cuenta es que no estamos hablando únicamente de las ciudades; también forman parte de las Comunidades Autónomas muchos territorios rurales. Un caso destacado es el de Cataluña, donde Barcelona probablemente sea uno de los municipios con mayores aumentos en el precio. Sin embargo, este incremento queda más que compensado por las reducciones en otros pueblos menos habitados."
  },
  {
    "objectID": "my_trabajo_BigDataJ.html#desempleo-por-ccaa",
    "href": "my_trabajo_BigDataJ.html#desempleo-por-ccaa",
    "title": "Análisis económico y demográfico de España. Retos para los jóvenes españoles",
    "section": "6.1.Desempleo por CCAA",
    "text": "6.1.Desempleo por CCAA\nY relacionado con lo anterior, tenemos aquí el desempleo por comunidades\n\nCódigodf_paro_ccaa &lt;- Epa_Paro_comunidades %&gt;%\n  filter(Edad == \"Total\", Sexo == \"Ambos sexos\", Comunidades.y.Ciudades.Autónomas != \"Total Nacional\") \n\ngrafo4 &lt;- ggplot(df_paro_ccaa, aes(x = Comunidades.y.Ciudades.Autónomas, y = value, fill = Comunidades.y.Ciudades.Autónomas)) +\n  geom_bar(stat = \"identity\") +\n  labs(\n    title = \"Desempleo por Comunidades Autónomas\",\n    x = \"CA\",\n    y = \"Desempleo\",\n    fill = \"CA\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.position = \"none\",\n    plot.title = element_text(face = \"bold\", size = 14),\n    axis.title = element_text(face = \"bold\"),\n    axis.text = element_text(size = 10),\n    axis.line = element_line(color = \"black\")\n  ) \nggplotly(grafo4)"
  },
  {
    "objectID": "my_trabajo_BigDataJ.html#desempleo-por-edad",
    "href": "my_trabajo_BigDataJ.html#desempleo-por-edad",
    "title": "Análisis económico y demográfico de España. Retos para los jóvenes españoles",
    "section": "6.2.Desempleo por edad",
    "text": "6.2.Desempleo por edad\n\nCódigodf_paro_edad &lt;- Epa_Paro_comunidades %&gt;%\n  select(Edad, Sexo, value) %&gt;%\n  filter(Sexo == \"Ambos sexos\", Edad != \"Total\")\n\ngrafo5 &lt;- ggplot(df_paro_edad, aes(x = Edad, y = value, fill =Edad)) +\n  geom_bar(stat = \"identity\") +\n  labs(\n    title = \"Desempleo por Edad\",\n    x = \"Intervalo de edad\",\n    y = \"Desempleo\",\n    fill = \"Edad\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.position = \"none\",\n    plot.title = element_text(face = \"bold\", size = 14),\n    axis.title = element_text(face = \"bold\"),\n    axis.text = element_text(size = 10),\n    axis.line = element_line(color = \"black\")\n  ) \nggplotly(grafo5)"
  },
  {
    "objectID": "my_trabajo_BigDataJ.html#desempleo-por-sexo",
    "href": "my_trabajo_BigDataJ.html#desempleo-por-sexo",
    "title": "Análisis económico y demográfico de España. Retos para los jóvenes españoles",
    "section": "6.3.Desempleo por sexo",
    "text": "6.3.Desempleo por sexo\nAhora vamos a ver el pero comparando por sexos\n\nCódigodf_paro_sexo &lt;- Epa_Paro_comunidades %&gt;%\n  select(Sexo, value) %&gt;%\n  filter(Sexo != \"Ambos sexos\")\n\ngrafo6 &lt;- ggplot(df_paro_sexo, aes(x = Sexo, y = value)) +\n  geom_bar(stat = \"identity\") +\n  labs(\n    title = \"Desempleo por sexo\",\n    x = \"Sexo\",\n    y = \"Desempleo\",\n    fill = \"Sexo\"\n  ) +\n  theme_minimal() \nggplotly(grafo6)"
  },
  {
    "objectID": "my_trabajo_BigDataJ.html#población-inmigrante-por-origen",
    "href": "my_trabajo_BigDataJ.html#población-inmigrante-por-origen",
    "title": "Análisis económico y demográfico de España. Retos para los jóvenes españoles",
    "section": "7.1.Población inmigrante por origen",
    "text": "7.1.Población inmigrante por origen\nEn el siguiente gráfico podemos observar la evolución de la población inmigrante residente en españa según su región de origen. Por compactarlo lo máximo posible, se han utilizado las regiones supranacionales que brinda el INE para esta cuestión. Podemos observar que el grupo más numeroso en términos demográficos es el de nacidos en otros países de la UE. Este grupo creció hasta, aproximadamente, el comienzo de la recesión a raíz de la crisis del 2008. Hasta el 2012 se matuvo estable y, a continuación, hasta 2019 experimentó un ligero descenso. En 2014 se produjo el “sorpasso” de la población africana a la sudamericana aunque, si observamos la tendencia de crecimiento de cada grupo, parece que no en mucho tardar, los sudamericanos se coronarán como el segundo grupo más numeroso.\nEl segundo y tercer grupo más numeroso, respectivamente, es el de sudamericanos y africanos. Podemos observar en ambos casos un comportamiento procíclico, siendo el de los sudamericanos más notable.\nEl cuarto y tercer grupo están conformados, respectivamente, por asiáticos y caribeños. Ambas poblaciones experimentan un crecimiento continuo y estable en los últimos años.\n\nCódigoruta_archivo &lt;- \"./datos/poblacion_inmigrante.xls\"\ndf_poblacion_inmigrante &lt;- read_excel(ruta_archivo)\n\ndf_poblacion_inmigrante&lt;- df_poblacion_inmigrante %&gt;% \n  pivot_longer(cols = 2:21, names_to = \"fecha\")\n\ngrafico_4&lt;-ggplot(data = df_poblacion_inmigrante, aes(x = fecha, y = value, color = origen, group = origen)) +\n  geom_line(size = 1) +\n  labs(x = \"Año\", y = NULL, \n       title = \"Población inmigrante por procedencia\",\n       caption = \"Elaboración propia a partir de datos del INE\") +\n  theme_solarized_2()+theme(legend.position = \"none\")\n\nggplotly(grafico_4)"
  },
  {
    "objectID": "my_trabajo_BigDataJ.html#población-por-ccaa",
    "href": "my_trabajo_BigDataJ.html#población-por-ccaa",
    "title": "Análisis económico y demográfico de España. Retos para los jóvenes españoles",
    "section": "7.2.Población por CCAA",
    "text": "7.2.Población por CCAA\nA continuación, tenemos un gráfico de barras\n\nCódigoruta_archivo&lt;-\"./datos/poblacion_ccaa.xls\"\ndf_poblacion_ccaa&lt;-read_excel(ruta_archivo)\n\norden_columnas &lt;- c(1, order(names(df_poblacion_ccaa)[-1]) + 1)\n\ndf_poblacion_ccaa &lt;- df_poblacion_ccaa[, orden_columnas]\n\ndf_poblacion_ccaa&lt;- df_poblacion_ccaa %&gt;% \n  pivot_longer(cols = 2:26, names_to = \"fecha\")\n\ndf_poblacion_ccaa &lt;- df_poblacion_ccaa[order(-df_poblacion_ccaa$value), ]\n\ngrafico_5 &lt;- ggplot(df_poblacion_ccaa, aes(x = reorder(CCAA, -value), y = value)) +\n  geom_bar(stat = \"identity\", fill = \"darkcyan\") +\n  labs(title = \"Población por Comunidad Autónoma\", x = \"Comunidad Autónoma\", y = \"Población\") +\n  theme_solarized() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  theme(legend.position = \"none\")+scale_y_continuous(labels = scales::comma) \n\ngrafico_5"
  },
  {
    "objectID": "my_trabajo_BigDataJ.html#pirámide-poblacional",
    "href": "my_trabajo_BigDataJ.html#pirámide-poblacional",
    "title": "Análisis económico y demográfico de España. Retos para los jóvenes españoles",
    "section": "7.3.Pirámide poblacional",
    "text": "7.3.Pirámide poblacional\n\nCódigourl &lt;- 'https://www.populationpyramid.net/api/pp/724/2023/?csv=true'\ndata &lt;- read.csv(url)\nhead(data)\n#&gt;     Age       M       F\n#&gt; 1   0-4  924878  874166\n#&gt; 2   5-9 1110682 1046828\n#&gt; 3 10-14 1259715 1182213\n#&gt; 4 15-19 1312515 1233843\n#&gt; 5 20-24 1268194 1189567\n#&gt; 6 25-29 1263026 1220525\ndata &lt;- data%&gt;%\n  pivot_longer(names_to = 'Gender', values_to = 'Population', cols = 2:3) %&gt;%\n  mutate(PopPerc=case_when(Gender=='M'~round(Population/sum(Population)*100,2),\n                           TRUE~-round(Population/sum(Population)*100,2)),\n         signal=case_when(Gender=='M'~1,\n                          TRUE~-1))\nhead(data)\n#&gt; # A tibble: 6 × 5\n#&gt;   Age   Gender Population PopPerc signal\n#&gt;   &lt;chr&gt; &lt;chr&gt;       &lt;int&gt;   &lt;dbl&gt;  &lt;dbl&gt;\n#&gt; 1 0-4   M          924878    1.95      1\n#&gt; 2 0-4   F          874166   -1.84     -1\n#&gt; 3 5-9   M         1110682    2.34      1\n#&gt; 4 5-9   F         1046828   -2.2      -1\n#&gt; 5 10-14 M         1259715    2.65      1\n#&gt; 6 10-14 F         1182213   -2.49     -1\nlevels(data$Age)\n#&gt; NULL\ndata$Age &lt;- factor(data$Age,levels=unique(data$Age),ordered=TRUE)\n\ngrafico_6&lt;-ggplot(data)+\n  geom_bar(aes(x=Age,y=PopPerc,fill=Gender),stat='identity')+\n  geom_text(aes(x=Age,y=PopPerc+signal*.3,label=abs(PopPerc)))+\n  coord_flip()+\n  scale_fill_manual(name='',values=c('darkred','steelblue'))+\n  scale_y_continuous(breaks=seq(-10,10,1),\n                     labels=function(x){paste(abs(x),'%')})+\n  labs(x='',y='Población (%)',\n       title='Pirámide poblacional de España',\n       subtitle=paste('Población residente en 2023', format(sum(data$Population),big.mark='.')),\n       caption='Fuente: Elaboración propia a partir de datos de PopulationPyramid.net')+\n  cowplot::theme_cowplot()+\n  theme(axis.text.x=element_text(vjust=.5),\n        panel.grid.major.y = element_line(color='lightgray',linetype='dashed'),\n        legend.position = 'top',\n        legend.justification = 'center')\n\nggplotly(grafico_6)"
  },
  {
    "objectID": "my_trabajo_BigData.html#pib-de-españa",
    "href": "my_trabajo_BigData.html#pib-de-españa",
    "title": "Análisis económico y demográfico de España. Retos para los jóvenes españoles",
    "section": "3.1.PIB de España",
    "text": "3.1.PIB de España\nLa primera variable económica a tratar será el PIB nominal de la nación. Podemos observar una tendencia creciente desde el 1995 hasta el 2008, momento en el que comienza la financiera a raiz del sobreendeudamiento del sector privado en los años previos. La recuperación económica no se vislumbra hasta principios del 2014, una recuperación basada en mayor grado en el crecimiento poblacional que en el incremento de la productividad. Por último, la crisis del Coronavirus incidió de forma significativa en la riqueza de la nación, dando lugar a una caída de la actividad económica que, sin embargo, se recuperó en pocos años.\n\nCódigoruta_archivo &lt;- \"./datos/pib.xls\"\ndf_PIB &lt;- read_excel(ruta_archivo)\n\nggplot(data = df_PIB, aes(x = Fecha, y = pib)) +\n  geom_line(color = \"blue\", size = 2) +\n  labs(x = \"Año\", y = \"PIB(en millones)\", title = \"Producto Interior Bruto España (1995-2020)\",\n       caption = \"Elaboración propia a partir de datos del INE\") +\n  theme_economist() +\n  annotate(\"rect\",\n           xmin = as.POSIXct(\"2008-01-01\"), \n           xmax = as.POSIXct(\"2014-01-01\"),  \n           ymin = -Inf,\n           ymax = Inf,\n           alpha = 0.2,\n           fill = \"red\") +\n  annotate(geom = \"text\",\n           x = as.POSIXct(\"2011-01-01\"),  \n           y = 1200000,  \n           label = \"Crisis inmobiliaria\",\n           size = 5) +\n  annotate(\"rect\",\n           xmin = as.POSIXct(\"2019-01-01\"), \n           xmax = as.POSIXct(\"2022-01-01\"),  \n           ymin = -Inf,\n           ymax = Inf,\n           alpha = 0.2,\n           fill = \"red\")+\n  annotate(geom = \"text\",\n           x = as.POSIXct(\"2019-01-01\"),  \n           y = 1300000,  \n           label = \"Crisis Coronavirus\",\n           size = 5) +\n  coord_cartesian(xlim = as.POSIXct(c(\"1995-01-01\", \"2023-01-01\")),   \n                  ylim = c(600000, 1400000))"
  },
  {
    "objectID": "my_trabajo_BigData.html#pib-top-5-ccaa",
    "href": "my_trabajo_BigData.html#pib-top-5-ccaa",
    "title": "Análisis económico y demográfico de España. Retos para los jóvenes españoles",
    "section": "3.2.PIB top 5 CCAA",
    "text": "3.2.PIB top 5 CCAA\nLos dos siguientes gráficos vienen a mostrar lo mismo: el PIB de cada una de las comunidades autónomas del país. La creación de dos gráficos obedece a una evidéncia empirica: la gran disparidad poblacional entre las diversas regiones, lo cual impedía el visualizar correctamente los datos de las regiones más pequeñas (en términos poblacionales).\nEn el primer grafico, podemos observar la evolución económica de las 5 regiones más ricas de España: Cataluña, Madrid, Andalucía, Comunitat Valenciana y País Vasco. En conjunto conforman un gráfico un tanto anodino por la similitud en el esdevenir económico del conjunto de regiones españolas. Este hecho se debe, sin ninguna duda, a que todas las CCAA tienen una configuración sectorial muy parecida y, además, son interdependientes entre sí por pertenecer todas a un mismo estado. Los shock que afrontan las distintas regiones son los mismos y sus efectos, también.\n\nCódigoruta_archivo &lt;- \"./datos/pib_ccaa_top5.xls\"\ndf_PIB_CCAA_TOP5 &lt;- read_excel(ruta_archivo)\ndf_PIB_CCAA_TOP5 &lt;- na.omit(df_PIB_CCAA_TOP5)\n\n\ndf_PIB_CCAA_TOP5&lt;- df_PIB_CCAA_TOP5 %&gt;% \n  pivot_longer(cols = 2:7, names_to = \"Fecha\")\n\ndf_PIB_CCAA_TOP5$Comunidad_Autonoma &lt;- as.factor(df_PIB_CCAA_TOP5$Comunidad_Autonoma)\n\ngrafico_3&lt;-ggplot(data = df_PIB_CCAA_TOP5, aes(x = Fecha, y = value, color = Comunidad_Autonoma, group = Comunidad_Autonoma)) +\n  geom_line(size = 1) +\n  labs(x = \"Año\", y = \"PIB(en miles)\", \n       title = \"Producto Interior por CCAA (2016-2021)\",\n       caption = \"Elaboración propia a partir de datos del INE\") +\n  theme_solarized_2()+theme(legend.position = \"none\")+scale_y_continuous(labels = scales::comma)\n\nggplotly(grafico_3)"
  },
  {
    "objectID": "my_trabajo_BigData.html#pib-resto-ccaa",
    "href": "my_trabajo_BigData.html#pib-resto-ccaa",
    "title": "Análisis económico y demográfico de España. Retos para los jóvenes españoles",
    "section": "3.3.PIB resto CCAA",
    "text": "3.3.PIB resto CCAA\nSi observamos el “furgon de cola” autonómico, podremos detectar dos excepciones a la afirmación anunciada anteriormente: las Islas Canarias y les Illes Balears. Ambos archipiélagos tienen en común el tener una gran dependencia del turismo. Es, por lo tanto, entendible que estas regiones hayan experimentado una caida transitoria del PIB mayor.\n\nCódigoruta_archivo &lt;- \"./datos/pib_ccaa.xls\"\ndf_PIB_CCAA &lt;- read_excel(ruta_archivo)\ndf_PIB_CCAA &lt;- na.omit(df_PIB_CCAA)\n\n\ndf_PIB_CCAA&lt;- df_PIB_CCAA %&gt;% \n  pivot_longer(cols = 2:7, names_to = \"Fecha\")\n\ndf_PIB_CCAA$Comunidad_Autonoma &lt;- as.factor(df_PIB_CCAA$Comunidad_Autonoma)\n\ngrafico_2&lt;-ggplot(data = df_PIB_CCAA, aes(x = Fecha, y = value, color = Comunidad_Autonoma, group = Comunidad_Autonoma)) +\n  geom_line(size = 1) +\n  labs(x = NULL, y = \"PIB(en miles)\", \n       title = \"Producto Interior por CCAA (2016-2021)\",\n       caption = \"Elaboración propia a partir de datos del INE\") +\n  theme_solarized_2()+theme(legend.position = \"none\")+scale_y_continuous(labels = scales::comma)\n\nggplotly(grafico_2)\n\n\n\n\n\n\n\nRenta media por comunidades\nComunidades de mayor renta media en 2021\nComunidades de mayor renta media en 2021 (minimalista)\n\n\n\nAhora vamos a ver la renta media por comunidades. Al usar la medida per cápita, el orden de las comunidades mejor posicionadas cambia. El orden varía, y Andaluciía deja de estar presente en el top.\n\nCódigodf_Renta_media &lt;- Renta_media %&gt;%\n  drop_na() %&gt;%\n  rename(Comunidad = Unidades.territoriales, rentamedia = value) %&gt;%\n  arrange(desc(Periodo)) %&gt;%\n  filter(Indicadores.de.renta.media == \"Renta neta media por persona\") %&gt;%\n  filter(Comunidad %in% c(\"Andalucía\", \"Aragón\", \"Asturrias, Principado de\", \"Balears, Illes\", \"Canarias\", \"Cantabria\", \"Castilla y León\", \"Castilla - La Mancha\", \"Cataluña\", \"Comunitat Valenciana\", \"Extremadura\", \"Galicia\", \"Madrid, Comunidad de\", \"Murcia, Región de\", \"Navarra, Comunidad Foral de\", \"País Vasco\", \"Rioja, La\", \"Ceuta\", \"Melilla\"))\n\ndf_Renta_media$Periodo &lt;- factor(df_Renta_media$Periodo, levels = sort(unique(df_Renta_media$Periodo), decreasing = TRUE))\n\ngrafo1 &lt;- df_Renta_media %&gt;%\n  ggplot(aes(x=Periodo, y=rentamedia, group=Comunidad, color=Comunidad)) +\n    geom_line() +\n  labs(x = NULL, y = \"Valor en euros\", \n       title = \"Renta media por CCAA (2016-2021)\") +\n    theme_solarized() \nggplotly(grafo1)\n\n\n\n\n\n\n\nEn forma de gráfico de barras puede ser un poco difícil discernir cuál es la comunidad autónoma con mayor renta media.\n\nCódigodf_top_renta_media &lt;- df_Renta_media %&gt;%\n  filter(Periodo == \"2021\") %&gt;%\n  slice_max(rentamedia, n = 5) \n\ngrafo2 &lt;- df_top_renta_media %&gt;%\nggplot(aes(x=Comunidad, y=rentamedia, group=Comunidad, color=Comunidad)) +\n  labs(x = NULL, y = \"Renta media en euros\", \n       title = \"5 mayores comunidades autónomas por renta media en euros\") +\n  geom_bar(stat = \"identity\") +\n  theme_clean() \nggplotly(grafo2)\n\n\n\n\n\n\n\nEsta representación más simple mediante puntos permite ver claramente que el País Vasco ocupa el primer puesto.\n\nCódigodf_top_renta_media &lt;- df_Renta_media %&gt;%\n  filter(Periodo == \"2021\") %&gt;%\n  slice_max(rentamedia, n = 5) \n\ngrafo2 &lt;- df_top_renta_media %&gt;%\nggplot(aes(x=Periodo, y=rentamedia, group=Comunidad, color=Comunidad)) +\n  labs(x = NULL, y = \"Renta media en euros\", \n       title = \"5 mayores comunidades autónomas por renta media en euros\") +\n  geom_point() +\n  theme_clean() \nggplotly(grafo2)"
  },
  {
    "objectID": "my_trabajo_BigData.html#comparativa-de-la-de-la-vivienda-entre-ccaa-2007-2022",
    "href": "my_trabajo_BigData.html#comparativa-de-la-de-la-vivienda-entre-ccaa-2007-2022",
    "title": "Análisis económico y demográfico de España. Retos para los jóvenes españoles",
    "section": "4.1.Comparativa de la △% de la vivienda entre CCAA (2007-2022)",
    "text": "4.1.Comparativa de la △% de la vivienda entre CCAA (2007-2022)\n\nCódigoIPC_vivienda &lt;- read.px(\"datos/IPC_vivienda.px\") %&gt;% as.data.frame()\n\n## TREEMAPS\n\ndf_vivienda_T4 &lt;- IPC_vivienda %&gt;%\n  filter(Índices.y.tasas == \"Variación anual\",\n         General..vivienda.nueva.y.de.segunda.mano == \"General\",\n         str_detect(Periodo, \"T4\"))\n  \nresultado_viv &lt;- df_vivienda_T4 %&gt;%\n  group_by(Comunidades.y.Ciudades.Autónomas) %&gt;%\n  do(Suma_de_Value = sum(.$value, na.rm = TRUE)) %&gt;%\n  ungroup()\n\n#ELIMINA LOS NUMERO DE COMUNIDADES\nresultado_viv &lt;- resultado_viv %&gt;%\n  mutate(Comunidades.y.Ciudades.Autónomas = gsub(\"^\\\\d+\\\\s+\", \"\", Comunidades.y.Ciudades.Autónomas))\n\nresultado_viv$Suma_de_Value &lt;- as.numeric(resultado_viv$Suma_de_Value)\n\n# DataFrame con Suma de Value positivos\ndf_positivos_viv &lt;- resultado_viv %&gt;%\n  filter(Suma_de_Value &gt; 0)\n\n# DataFrame con Suma de Value negativos\ndf_negativos_viv &lt;- resultado_viv %&gt;%\n  filter(Suma_de_Value &lt; 0)\n\n## HAY QUE CONSIDERAR QUE CATALUÑA ES MUY GRANDE ENTONCES PUEDE QUE EN BARCELONA SI HAYAN AUMENTOS MUY ELEVADOS, MIENTRAS QUE EN LAS ZONAS RURALES HAYAN GRANDES DESCENSOS\n\n##Nueva columna con logaritmos para reducir las diferencias de los bloques\ndf_positivos_viv &lt;- df_positivos_viv %&gt;%\n  mutate(Suma_de_Value_Log = log1p(Suma_de_Value))  # Logaritmo natural más 1 para evitar log(0)\n\n##Debemos transformarlos a positivos ya que hay que hacer logaritmos\ndf_negativos_viv &lt;- df_negativos_viv %&gt;%\n  mutate(Suma_de_Value = ifelse(Suma_de_Value &lt; 0, abs(Suma_de_Value), Suma_de_Value))\n\n##Nueva columna con logaritmos para reducir las diferencias de los bloques\ndf_negativos_viv &lt;- df_negativos_viv %&gt;%\n  mutate(Suma_de_Value_Log = log1p(Suma_de_Value)) \n\np_viv_positive &lt;- ggplot(df_positivos_viv, aes(area = Suma_de_Value_Log, label = paste(Comunidades.y.Ciudades.Autónomas, Suma_de_Value, sep = \"\\n\"))) +\n  geom_treemap(fill = \"green\", colour = \"black\", size = 1.5) +\n  geom_treemap_text(colour = \"black\", place = \"centre\", size = 10) +\n  theme(panel.border = element_rect(color = \"black\", fill = NA, size = 2)) +\n  coord_fixed(ratio = 0.7)# Agregar un borde alrededor del gráfico\n\np_viv_negative &lt;- ggplot(df_negativos_viv, aes(area = Suma_de_Value_Log, label = paste(Comunidades.y.Ciudades.Autónomas, paste0(\"-\", Suma_de_Value), sep = \"\\n\"))) +\n  geom_treemap(fill = \"red\", colour = \"black\", size = 1.5) +  \n  geom_treemap_text(colour = \"black\", place = \"centre\", size = 10) +\n  theme(panel.border = element_rect(color = \"black\", fill = NA, size = 2)) +\n  coord_fixed(ratio = 0.7)\n\n\n\n\n△% positiva y negativa del P(€) Vivienda por CC.AA.\nProcedimiento\n\n\n\n\nCódigoplot(p_viv_positive) \n\nplot(p_viv_negative)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPara realizar este Treemap, hemos tenido que filtrar los datos que nos convenían para facilitar el manejo de los df’s. En este caso concreto, hemos considerado todas las viviendas, la variación anual y únicamente los T4 (cuartos trimestres). Posteriormente, agrupamos por Comunidades y realizamos la suma de los valores para obtener la variación acumulada durante todos los años. Sin embargo, tuvimos que eliminar los años que acompañaban a T4 para continuar.\nUna vez obtenido, dividimos el df en dos distintos: uno para los valores positivos y otro para los negativos. Para que los cuadros no se vieran muy contrastados entre sí y se apreciaran las pequeñas variaciones, cambiamos la escala a logarítmica, creando una nueva columna con los valores en logaritmo. Aquí tuvimos un ligero problema, ya que para cambiar a logaritmo tuvimos que convertir los valores negativos en positivos.\nSobre los Treemaps, es importante mencionar que cambiamos la proporción del rectángulo. Utilizamos la función ‘paste’ de ‘label’ con =‘barra + n’ para poder mostrar tanto la comunidad como el valor en los bloques. Además, tuvimos que añadir un guion en ‘label’ a los valores que estaban positivos pero que queríamos mostrar como negativos.\nPara poder colocar los dos juntos en la página web, utilizamos ‘#| column: screen-inset-shaded’ y abajo ‘#| layout-nrow: 1’ antes de escribir el código.\n\n\n\nEn estos Treemaps, podemos observar la variación total acumulada desde el cuarto trimestre de 2007 hasta el cuarto trimestre de 2022 en el precio medio de todas las viviendas (tanto nuevas como de segunda mano) vendidas a lo largo de estos últimos años en las diferentes Comunidades Autónomas de nuestro país. Hay varios hechos a considerar para poder analizar los cuadros con una perspectiva adecuada. El primero es que en 2007, el precio de la vivienda había experimentado una fuerte subida respecto a los años anteriores, encontrándose en plena burbuja inmobiliaria. Por lo tanto, no es sorprendente que en muchos territorios el precio haya sufrido grandes reducciones en promedio desde entonces, algo que debería considerar cualquier persona con expectativas de invertir a medio plazo en este sector. Otro hecho que debemos tener en cuenta es que no estamos hablando únicamente de las ciudades; también forman parte de las Comunidades Autónomas muchos territorios rurales. Un caso destacado es el de Cataluña, donde Barcelona probablemente sea uno de los municipios con mayores aumentos en el precio. Sin embargo, este incremento queda más que compensado por las reducciones en otros pueblos menos habitados."
  },
  {
    "objectID": "my_trabajo_BigData.html#desempleo-por-ccaa",
    "href": "my_trabajo_BigData.html#desempleo-por-ccaa",
    "title": "Análisis económico y demográfico de España. Retos para los jóvenes españoles",
    "section": "6.1.Desempleo por CCAA",
    "text": "6.1.Desempleo por CCAA\nY relacionado con lo anterior, tenemos aquí el desempleo por comunidades\n\nCódigodf_paro_ccaa &lt;- Epa_Paro_comunidades %&gt;%\n  filter(Edad == \"Total\", Sexo == \"Ambos sexos\", Comunidades.y.Ciudades.Autónomas != \"Total Nacional\") \n\ngrafo4 &lt;- ggplot(df_paro_ccaa, aes(x = Comunidades.y.Ciudades.Autónomas, y = value, fill = Comunidades.y.Ciudades.Autónomas)) +\n  geom_bar(stat = \"identity\") +\n  labs(\n    title = \"Desempleo por Comunidades Autónomas\",\n    x = \"CA\",\n    y = \"Desempleo\",\n    fill = \"CA\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.position = \"none\",\n    plot.title = element_text(face = \"bold\", size = 14),\n    axis.title = element_text(face = \"bold\"),\n    axis.text = element_text(size = 10),\n    axis.line = element_line(color = \"black\")\n  ) \nggplotly(grafo4)"
  },
  {
    "objectID": "my_trabajo_BigData.html#desempleo-por-edad",
    "href": "my_trabajo_BigData.html#desempleo-por-edad",
    "title": "Análisis económico y demográfico de España. Retos para los jóvenes españoles",
    "section": "6.2.Desempleo por edad",
    "text": "6.2.Desempleo por edad\n\nCódigodf_paro_edad &lt;- Epa_Paro_comunidades %&gt;%\n  select(Edad, Sexo, value) %&gt;%\n  filter(Sexo == \"Ambos sexos\", Edad != \"Total\")\n\ngrafo5 &lt;- ggplot(df_paro_edad, aes(x = Edad, y = value, fill =Edad)) +\n  geom_bar(stat = \"identity\") +\n  labs(\n    title = \"Desempleo por Edad\",\n    x = \"Intervalo de edad\",\n    y = \"Desempleo\",\n    fill = \"Edad\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.position = \"none\",\n    plot.title = element_text(face = \"bold\", size = 14),\n    axis.title = element_text(face = \"bold\"),\n    axis.text = element_text(size = 10),\n    axis.line = element_line(color = \"black\")\n  ) \nggplotly(grafo5)"
  },
  {
    "objectID": "my_trabajo_BigData.html#desempleo-por-sexo",
    "href": "my_trabajo_BigData.html#desempleo-por-sexo",
    "title": "Análisis económico y demográfico de España. Retos para los jóvenes españoles",
    "section": "6.3.Desempleo por sexo",
    "text": "6.3.Desempleo por sexo\nAhora vamos a ver el pero comparando por sexos\n\nCódigodf_paro_sexo &lt;- Epa_Paro_comunidades %&gt;%\n  select(Sexo, value) %&gt;%\n  filter(Sexo != \"Ambos sexos\")\n\ngrafo6 &lt;- ggplot(df_paro_sexo, aes(x = Sexo, y = value)) +\n  geom_bar(stat = \"identity\") +\n  labs(\n    title = \"Desempleo por sexo\",\n    x = \"Sexo\",\n    y = \"Desempleo\",\n    fill = \"Sexo\"\n  ) +\n  theme_minimal() \nggplotly(grafo6)"
  },
  {
    "objectID": "my_trabajo_BigData.html#población-inmigrante-por-origen",
    "href": "my_trabajo_BigData.html#población-inmigrante-por-origen",
    "title": "Análisis económico y demográfico de España. Retos para los jóvenes españoles",
    "section": "7.1.Población inmigrante por origen",
    "text": "7.1.Población inmigrante por origen\nEn el siguiente gráfico podemos observar la evolución de la población inmigrante residente en españa según su región de origen. Por compactarlo lo máximo posible, se han utilizado las regiones supranacionales que brinda el INE para esta cuestión. Podemos observar que el grupo más numeroso en términos demográficos es el de nacidos en otros países de la UE. Este grupo creció hasta, aproximadamente, el comienzo de la recesión a raíz de la crisis del 2008. Hasta el 2012 se matuvo estable y, a continuación, hasta 2019 experimentó un ligero descenso. En 2014 se produjo el “sorpasso” de la población africana a la sudamericana aunque, si observamos la tendencia de crecimiento de cada grupo, parece que no en mucho tardar, los sudamericanos se coronarán como el segundo grupo más numeroso.\nEl segundo y tercer grupo más numeroso, respectivamente, es el de sudamericanos y africanos. Podemos observar en ambos casos un comportamiento procíclico, siendo el de los sudamericanos más notable.\nEl cuarto y tercer grupo están conformados, respectivamente, por asiáticos y caribeños. Ambas poblaciones experimentan un crecimiento continuo y estable en los últimos años.\n\nCódigoruta_archivo &lt;- \"./datos/poblacion_inmigrante.xls\"\ndf_poblacion_inmigrante &lt;- read_excel(ruta_archivo)\n\ndf_poblacion_inmigrante&lt;- df_poblacion_inmigrante %&gt;% \n  pivot_longer(cols = 2:21, names_to = \"fecha\")\n\ngrafico_4&lt;-ggplot(data = df_poblacion_inmigrante, aes(x = fecha, y = value, color = origen, group = origen)) +\n  geom_line(size = 1) +\n  labs(x = \"Año\", y = NULL, \n       title = \"Población inmigrante por procedencia\",\n       caption = \"Elaboración propia a partir de datos del INE\") +\n  theme_solarized_2()+theme(legend.position = \"none\")\n\nggplotly(grafico_4)"
  },
  {
    "objectID": "my_trabajo_BigData.html#población-por-ccaa",
    "href": "my_trabajo_BigData.html#población-por-ccaa",
    "title": "Análisis económico y demográfico de España. Retos para los jóvenes españoles",
    "section": "7.2.Población por CCAA",
    "text": "7.2.Población por CCAA\nA continuación, tenemos un gráfico de barras\n\nCódigoruta_archivo&lt;-\"./datos/poblacion_ccaa.xls\"\ndf_poblacion_ccaa&lt;-read_excel(ruta_archivo)\n\norden_columnas &lt;- c(1, order(names(df_poblacion_ccaa)[-1]) + 1)\n\ndf_poblacion_ccaa &lt;- df_poblacion_ccaa[, orden_columnas]\n\ndf_poblacion_ccaa&lt;- df_poblacion_ccaa %&gt;% \n  pivot_longer(cols = 2:26, names_to = \"fecha\")\n\ndf_poblacion_ccaa &lt;- df_poblacion_ccaa[order(-df_poblacion_ccaa$value), ]\n\ngrafico_5 &lt;- ggplot(df_poblacion_ccaa, aes(x = reorder(CCAA, -value), y = value)) +\n  geom_bar(stat = \"identity\", fill = \"darkcyan\") +\n  labs(title = \"Población por Comunidad Autónoma\", x = \"Comunidad Autónoma\", y = \"Población\") +\n  theme_solarized() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  theme(legend.position = \"none\")+scale_y_continuous(labels = scales::comma) \n\ngrafico_5"
  }
]